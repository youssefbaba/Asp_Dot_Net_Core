2023-07-05 23:32:06.472 +01:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2023-07-05 23:32:06.756 +01:00 [DBG] Hosting starting
2023-07-05 23:32:06.790 +01:00 [INF] User profile is available. Using 'C:\Users\YoussefBaba\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-07-05 23:32:06.802 +01:00 [DBG] Reading data from file 'C:\Users\YoussefBaba\AppData\Local\ASP.NET\DataProtection-Keys\key-086a6081-eb03-4bb1-a34d-5120bae08b88.xml'.
2023-07-05 23:32:06.805 +01:00 [DBG] Reading data from file 'C:\Users\YoussefBaba\AppData\Local\ASP.NET\DataProtection-Keys\key-a87a6934-b999-4d05-b268-66210133ed23.xml'.
2023-07-05 23:32:06.826 +01:00 [DBG] Found key {086a6081-eb03-4bb1-a34d-5120bae08b88}.
2023-07-05 23:32:06.830 +01:00 [DBG] Found key {a87a6934-b999-4d05-b268-66210133ed23}.
2023-07-05 23:32:06.857 +01:00 [DBG] Considering key {a87a6934-b999-4d05-b268-66210133ed23} with expiration date 2023-08-27 09:39:32Z as default key.
2023-07-05 23:32:06.860 +01:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2023-07-05 23:32:06.874 +01:00 [DBG] Decrypting secret element using Windows DPAPI.
2023-07-05 23:32:06.877 +01:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2023-07-05 23:32:06.891 +01:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2023-07-05 23:32:06.895 +01:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2023-07-05 23:32:06.909 +01:00 [DBG] Using key {a87a6934-b999-4d05-b268-66210133ed23} as the default key.
2023-07-05 23:32:06.911 +01:00 [DBG] Key ring with default key {a87a6934-b999-4d05-b268-66210133ed23} was loaded during application startup.
2023-07-05 23:32:06.933 +01:00 [DBG] Loaded hosting startup assembly ContactsManager.UI
2023-07-05 23:32:06.934 +01:00 [DBG] Hosting started
2023-07-05 23:32:07.045 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost/Persons/Index - -
2023-07-05 23:32:07.054 +01:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2023-07-05 23:32:07.073 +01:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: http
PathBase: 
Path: /Persons/Index
Host: localhost
2023-07-05 23:32:07.076 +01:00 [DBG] The request path /Persons/Index does not match a supported file type
2023-07-05 23:32:07.153 +01:00 [DBG] 1 candidate(s) found for the request path '/Persons/Index'
2023-07-05 23:32:07.161 +01:00 [DBG] Endpoint 'ContactsManager.UI.Controllers.PersonsController.Index (ContactsManager.UI)' with route pattern 'Persons/Index' is valid for the request path '/Persons/Index'
2023-07-05 23:32:07.162 +01:00 [DBG] Request matched endpoint 'ContactsManager.UI.Controllers.PersonsController.Index (ContactsManager.UI)'
2023-07-05 23:32:07.164 +01:00 [INF] Executing endpoint 'ContactsManager.UI.Controllers.PersonsController.Index (ContactsManager.UI)'
2023-07-05 23:32:07.257 +01:00 [INF] Route matched with {action = "Index", controller = "Persons"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index(System.String, System.String, System.String, ContactsManager.Core.Enums.SortOrderOptions) on controller ContactsManager.UI.Controllers.PersonsController (ContactsManager.UI).
2023-07-05 23:32:07.258 +01:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2023-07-05 23:32:07.259 +01:00 [DBG] Execution plan of resource filters (in the following order): ["Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.SaveTempDataFilter"]
2023-07-05 23:32:07.272 +01:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.Filters.ControllerActionFilter (Order: -2147483648)","Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","ContactsManager.UI.Filters.ActionFilters.ResponseHeaderActionFilter (Order: 3)","ContactsManager.UI.Filters.ActionFilters.ResponseHeaderActionFilter (Order: 1)","ContactsManager.UI.Filters.ActionFilters.ResponseHeaderActionFilter (Order: 2)","ContactsManager.UI.Filters.ActionFilters.PersonsListActionFilter (Order: 4)"]
2023-07-05 23:32:07.272 +01:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2023-07-05 23:32:07.272 +01:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.SaveTempDataFilter","ContactsManager.UI.Filters.ResultFilters.PersonsAlwaysRunResultFilter","ContactsManager.UI.Filters.ResultFilters.PersonsListResultFilter"]
2023-07-05 23:32:07.274 +01:00 [DBG] Executing controller factory for controller ContactsManager.UI.Controllers.PersonsController (ContactsManager.UI)
2023-07-05 23:32:07.511 +01:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2023-07-05 23:32:07.599 +01:00 [DBG] Executed controller factory for controller ContactsManager.UI.Controllers.PersonsController (ContactsManager.UI)
2023-07-05 23:32:07.619 +01:00 [DBG] Attempting to bind parameter 'searchBy' of type 'System.String' ...
2023-07-05 23:32:07.622 +01:00 [DBG] Attempting to bind parameter 'searchBy' of type 'System.String' using the name '' in request data ...
2023-07-05 23:32:07.623 +01:00 [DBG] Could not find a value in the request with name '' for binding parameter 'searchBy' of type 'System.String'.
2023-07-05 23:32:07.624 +01:00 [DBG] Done attempting to bind parameter 'searchBy' of type 'System.String'.
2023-07-05 23:32:07.624 +01:00 [DBG] Done attempting to bind parameter 'searchBy' of type 'System.String'.
2023-07-05 23:32:07.625 +01:00 [DBG] Attempting to validate the bound parameter 'searchBy' of type 'System.String' ...
2023-07-05 23:32:07.643 +01:00 [DBG] Done attempting to validate the bound parameter 'searchBy' of type 'System.String'.
2023-07-05 23:32:07.647 +01:00 [DBG] Attempting to bind parameter 'searchString' of type 'System.String' ...
2023-07-05 23:32:07.648 +01:00 [DBG] Attempting to bind parameter 'searchString' of type 'System.String' using the name '' in request data ...
2023-07-05 23:32:07.649 +01:00 [DBG] Could not find a value in the request with name '' for binding parameter 'searchString' of type 'System.String'.
2023-07-05 23:32:07.649 +01:00 [DBG] Done attempting to bind parameter 'searchString' of type 'System.String'.
2023-07-05 23:32:07.650 +01:00 [DBG] Done attempting to bind parameter 'searchString' of type 'System.String'.
2023-07-05 23:32:07.651 +01:00 [DBG] Attempting to validate the bound parameter 'searchString' of type 'System.String' ...
2023-07-05 23:32:07.652 +01:00 [DBG] Done attempting to validate the bound parameter 'searchString' of type 'System.String'.
2023-07-05 23:32:07.652 +01:00 [DBG] Attempting to bind parameter 'sortBy' of type 'System.String' ...
2023-07-05 23:32:07.652 +01:00 [DBG] Attempting to bind parameter 'sortBy' of type 'System.String' using the name '' in request data ...
2023-07-05 23:32:07.653 +01:00 [DBG] Could not find a value in the request with name '' for binding parameter 'sortBy' of type 'System.String'.
2023-07-05 23:32:07.653 +01:00 [DBG] Done attempting to bind parameter 'sortBy' of type 'System.String'.
2023-07-05 23:32:07.653 +01:00 [DBG] Done attempting to bind parameter 'sortBy' of type 'System.String'.
2023-07-05 23:32:07.653 +01:00 [DBG] Attempting to validate the bound parameter 'sortBy' of type 'System.String' ...
2023-07-05 23:32:07.654 +01:00 [DBG] Done attempting to validate the bound parameter 'sortBy' of type 'System.String'.
2023-07-05 23:32:07.654 +01:00 [DBG] Attempting to bind parameter 'sortOrder' of type 'ContactsManager.Core.Enums.SortOrderOptions' ...
2023-07-05 23:32:07.654 +01:00 [DBG] Attempting to bind parameter 'sortOrder' of type 'ContactsManager.Core.Enums.SortOrderOptions' using the name '' in request data ...
2023-07-05 23:32:07.654 +01:00 [DBG] Could not find a value in the request with name '' for binding parameter 'sortOrder' of type 'ContactsManager.Core.Enums.SortOrderOptions'.
2023-07-05 23:32:07.654 +01:00 [DBG] Done attempting to bind parameter 'sortOrder' of type 'ContactsManager.Core.Enums.SortOrderOptions'.
2023-07-05 23:32:07.654 +01:00 [DBG] Done attempting to bind parameter 'sortOrder' of type 'ContactsManager.Core.Enums.SortOrderOptions'.
2023-07-05 23:32:07.654 +01:00 [DBG] Attempting to validate the bound parameter 'sortOrder' of type 'ContactsManager.Core.Enums.SortOrderOptions' ...
2023-07-05 23:32:07.655 +01:00 [DBG] Done attempting to validate the bound parameter 'sortOrder' of type 'ContactsManager.Core.Enums.SortOrderOptions'.
2023-07-05 23:32:07.658 +01:00 [INF] before logic of ResponseHeaderActionFilter.OnActionExecutionAsync method
2023-07-05 23:32:07.658 +01:00 [INF] before logic of ResponseHeaderActionFilter.OnActionExecutionAsync method
2023-07-05 23:32:07.676 +01:00 [INF] Before logic of PersonsListActionFilter.OnActionExecutionAsync method
2023-07-05 23:32:07.677 +01:00 [DBG] Order: 4
2023-07-05 23:32:07.679 +01:00 [INF] Index action method of PersonsController
2023-07-05 23:32:07.680 +01:00 [DBG] searchBy: null, searchString: null, sortBy: PersonName, sortOrder: "ASC"
2023-07-05 23:32:07.685 +01:00 [INF] GetAllPersons method of PersonsGetterService
2023-07-05 23:32:07.687 +01:00 [INF] GetAllPersons method of PersonsRepository
2023-07-05 23:32:09.221 +01:00 [INF] Entity Framework Core 6.0.9 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=DatabaseForTesting 
2023-07-05 23:32:09.324 +01:00 [DBG] Compiling query expression: 
'DbSet<Person>()
    .Include("Country")'
2023-07-05 23:32:09.545 +01:00 [DBG] Including navigation: 'Person.Country'.
2023-07-05 23:32:09.959 +01:00 [DBG] Generated query execution expression: 
'queryContext => new QueryingEnumerable<Person>(
    queryContext, 
    InMemoryQueryExpression.LeftJoin<ValueBuffer, ValueBuffer, Guid?, ValueBuffer>(
        outer: InMemoryShapedQueryCompilingExpressionVisitor.Table(
            queryContext: queryContext, 
            entityType: EntityType: Person), 
        inner: InMemoryShapedQueryCompilingExpressionVisitor.Table(
            queryContext: queryContext, 
            entityType: EntityType: Country), 
        outerKeySelector: valueBuffer => ExpressionExtensions.ValueBufferTryReadValue<Guid?>(
            valueBuffer: valueBuffer, 
            index: 2, 
            property: Property: Person.CountryID (Guid?) FK Index), 
        innerKeySelector: valueBuffer => (Guid?)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
            valueBuffer: valueBuffer, 
            index: 0, 
            property: Property: Country.CountryID (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
        resultSelector: (outer, inner) => new ValueBuffer(new object[]
        { 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: outer, 
                index: 0, 
                property: Property: Person.PersonID (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: outer, 
                index: 1, 
                property: Property: Person.Address (string) MaxLength(200)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid?>(
                valueBuffer: outer, 
                index: 2, 
                property: Property: Person.CountryID (Guid?) FK Index), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<DateTime?>(
                valueBuffer: outer, 
                index: 3, 
                property: Property: Person.DateOfBirth (DateTime?)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: outer, 
                index: 4, 
                property: Property: Person.Email (string) MaxLength(40)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: outer, 
                index: 5, 
                property: Property: Person.Gender (string) MaxLength(10)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: outer, 
                index: 6, 
                property: Property: Person.PersonName (string) MaxLength(40)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<bool>(
                valueBuffer: outer, 
                index: 7, 
                property: Property: Person.ReceiveNewsLetters (bool) Required), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: outer, 
                index: 8, 
                property: Property: Person.SSN (string)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<bool>(
                valueBuffer: outer, 
                index: 9, 
                property: Property: Person.SSNIsChanged (bool) Required), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: outer, 
                index: 10, 
                property: Property: Person.TIN (string)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid?>(
                valueBuffer: inner, 
                index: 0, 
                property: Property: Country.CountryID (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: inner, 
                index: 1, 
                property: Property: Country.CountryName (string)) 
        }), 
        defaultValue: ValueBuffer)
        .Select(valueBuffer => new ValueBuffer(new object[]
        { 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 0, 
                property: Property: Person.PersonID (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 1, 
                property: Property: Person.Address (string) MaxLength(200)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid?>(
                valueBuffer: valueBuffer, 
                index: 2, 
                property: Property: Person.CountryID (Guid?) FK Index), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<DateTime?>(
                valueBuffer: valueBuffer, 
                index: 3, 
                property: Property: Person.DateOfBirth (DateTime?)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 4, 
                property: Property: Person.Email (string) MaxLength(40)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 5, 
                property: Property: Person.Gender (string) MaxLength(10)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 6, 
                property: Property: Person.PersonName (string) MaxLength(40)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<bool>(
                valueBuffer: valueBuffer, 
                index: 7, 
                property: Property: Person.ReceiveNewsLetters (bool) Required), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 8, 
                property: Property: Person.SSN (string)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<bool>(
                valueBuffer: valueBuffer, 
                index: 9, 
                property: Property: Person.SSNIsChanged (bool) Required), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 10, 
                property: Property: Person.TIN (string)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid?>(
                valueBuffer: valueBuffer, 
                index: 11, 
                property: Property: Country.CountryID (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 12, 
                property: Property: Country.CountryName (string)) 
        }))
        .Select(valueBuffer => new ValueBuffer(new object[]
        { 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 0, 
                property: Property: Person.PersonID (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 1, 
                property: Property: Person.Address (string) MaxLength(200)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid?>(
                valueBuffer: valueBuffer, 
                index: 2, 
                property: Property: Person.CountryID (Guid?) FK Index), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<DateTime?>(
                valueBuffer: valueBuffer, 
                index: 3, 
                property: Property: Person.DateOfBirth (DateTime?)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 4, 
                property: Property: Person.Email (string) MaxLength(40)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 5, 
                property: Property: Person.Gender (string) MaxLength(10)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 6, 
                property: Property: Person.PersonName (string) MaxLength(40)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<bool>(
                valueBuffer: valueBuffer, 
                index: 7, 
                property: Property: Person.ReceiveNewsLetters (bool) Required), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 8, 
                property: Property: Person.SSN (string)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<bool>(
                valueBuffer: valueBuffer, 
                index: 9, 
                property: Property: Person.SSNIsChanged (bool) Required), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 10, 
                property: Property: Person.TIN (string)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid?>(
                valueBuffer: valueBuffer, 
                index: 11, 
                property: Property: Country.CountryID (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 12, 
                property: Property: Country.CountryName (string)) 
        })), 
    Func<QueryContext, ValueBuffer, Person>, 
    ContactsManager.Infrastructure.DatabaseContext.ApplicationDbContext, 
    False, 
    True
)'
2023-07-05 23:32:10.032 +01:00 [INF] GetFilteredPersons method of PersonsGetterService
2023-07-05 23:32:10.033 +01:00 [INF] GetAllPersons method of PersonsRepository
2023-07-05 23:32:10.044 +01:00 [INF] GetSortedPersons method of PersonsSorterService
2023-07-05 23:32:10.045 +01:00 [INF] After logic of PersonsListActionFilter.OnActionExecutionAsync method
2023-07-05 23:32:10.046 +01:00 [DBG] Order: 4
2023-07-05 23:32:10.046 +01:00 [INF] after logic of ResponseHeaderActionFilter.OnActionExecutionAsync method
2023-07-05 23:32:10.047 +01:00 [INF] after logic of ResponseHeaderActionFilter.OnActionExecutionAsync method
2023-07-05 23:32:10.050 +01:00 [INF] before logic of PersonsListResultFilter.OnResultExecutionAsync method
2023-07-05 23:32:10.057 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Countries/UploadFromExcel.cshtml'.
2023-07-05 23:32:10.057 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Persons/Create.cshtml'.
2023-07-05 23:32:10.058 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Persons/Delete.cshtml'.
2023-07-05 23:32:10.058 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Persons/Edit.cshtml'.
2023-07-05 23:32:10.058 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Persons/Index.cshtml'.
2023-07-05 23:32:10.058 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Persons/PersonsPDF.cshtml'.
2023-07-05 23:32:10.058 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Shared/_Breadcrumb.cshtml'.
2023-07-05 23:32:10.058 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Shared/_Error.cshtml'.
2023-07-05 23:32:10.058 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Shared/_GridColumnHeader.cshtml'.
2023-07-05 23:32:10.058 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Shared/_Layout.cshtml'.
2023-07-05 23:32:10.058 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/_ViewImports.cshtml'.
2023-07-05 23:32:10.059 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/_ViewStart.cshtml'.
2023-07-05 23:32:10.067 +01:00 [DBG] View lookup cache miss for view 'Index' in controller 'Persons'.
2023-07-05 23:32:10.076 +01:00 [INF] Executing ViewResult, running view Index.
2023-07-05 23:32:10.089 +01:00 [DBG] The view path '/Views/Persons/Index.cshtml' was found in 10.8425ms.
2023-07-05 23:32:10.281 +01:00 [DBG] Found the endpoints ["ContactsManager.UI.Controllers.PersonsController.Index (ContactsManager.UI)","ContactsManager.UI.Controllers.PersonsController.Index (ContactsManager.UI)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-07-05 23:32:10.298 +01:00 [DBG] Successfully processed template Persons/Index for ContactsManager.UI.Controllers.PersonsController.Index (ContactsManager.UI) resulting in /Persons/Index and 
2023-07-05 23:32:10.301 +01:00 [DBG] Link generation succeeded for endpoints ["ContactsManager.UI.Controllers.PersonsController.Index (ContactsManager.UI)","ContactsManager.UI.Controllers.PersonsController.Index (ContactsManager.UI)"] with result /Persons/Index
2023-07-05 23:32:10.329 +01:00 [DBG] View lookup cache miss for view '_Breadcrumb' in controller 'Persons'.
2023-07-05 23:32:10.397 +01:00 [DBG] Found the endpoints ["ContactsManager.UI.Controllers.PersonsController.Create (ContactsManager.UI)","ContactsManager.UI.Controllers.PersonsController.Create (ContactsManager.UI)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-07-05 23:32:10.397 +01:00 [DBG] Successfully processed template Persons/Create for ContactsManager.UI.Controllers.PersonsController.Create (ContactsManager.UI) resulting in /Persons/Create and 
2023-07-05 23:32:10.397 +01:00 [DBG] Link generation succeeded for endpoints ["ContactsManager.UI.Controllers.PersonsController.Create (ContactsManager.UI)","ContactsManager.UI.Controllers.PersonsController.Create (ContactsManager.UI)"] with result /Persons/Create
2023-07-05 23:32:10.401 +01:00 [DBG] Found the endpoints ["ContactsManager.UI.Controllers.PersonsController.PersonsPDF (ContactsManager.UI)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-07-05 23:32:10.401 +01:00 [DBG] Successfully processed template Persons/PersonsPDF for ContactsManager.UI.Controllers.PersonsController.PersonsPDF (ContactsManager.UI) resulting in /Persons/PersonsPDF and 
2023-07-05 23:32:10.402 +01:00 [DBG] Link generation succeeded for endpoints ["ContactsManager.UI.Controllers.PersonsController.PersonsPDF (ContactsManager.UI)"] with result /Persons/PersonsPDF
2023-07-05 23:32:10.405 +01:00 [DBG] Found the endpoints ["ContactsManager.UI.Controllers.PersonsController.PersonsCSV (ContactsManager.UI)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-07-05 23:32:10.405 +01:00 [DBG] Successfully processed template Persons/PersonsCSV for ContactsManager.UI.Controllers.PersonsController.PersonsCSV (ContactsManager.UI) resulting in /Persons/PersonsCSV and 
2023-07-05 23:32:10.405 +01:00 [DBG] Link generation succeeded for endpoints ["ContactsManager.UI.Controllers.PersonsController.PersonsCSV (ContactsManager.UI)"] with result /Persons/PersonsCSV
2023-07-05 23:32:10.406 +01:00 [DBG] Found the endpoints ["ContactsManager.UI.Controllers.PersonsController.PersonsExcel (ContactsManager.UI)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-07-05 23:32:10.407 +01:00 [DBG] Successfully processed template Persons/PersonsExcel for ContactsManager.UI.Controllers.PersonsController.PersonsExcel (ContactsManager.UI) resulting in /Persons/PersonsExcel and 
2023-07-05 23:32:10.407 +01:00 [DBG] Link generation succeeded for endpoints ["ContactsManager.UI.Controllers.PersonsController.PersonsExcel (ContactsManager.UI)"] with result /Persons/PersonsExcel
2023-07-05 23:32:10.458 +01:00 [DBG] Found the endpoints ["ContactsManager.UI.Controllers.PersonsController.Index (ContactsManager.UI)","ContactsManager.UI.Controllers.PersonsController.Index (ContactsManager.UI)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-07-05 23:32:10.458 +01:00 [DBG] Successfully processed template Persons/Index for ContactsManager.UI.Controllers.PersonsController.Index (ContactsManager.UI) resulting in /Persons/Index and 
2023-07-05 23:32:10.458 +01:00 [DBG] Link generation succeeded for endpoints ["ContactsManager.UI.Controllers.PersonsController.Index (ContactsManager.UI)","ContactsManager.UI.Controllers.PersonsController.Index (ContactsManager.UI)"] with result /Persons/Index
2023-07-05 23:32:10.459 +01:00 [DBG] View lookup cache miss for view '_GridColumnHeader' in controller 'Persons'.
2023-07-05 23:32:10.558 +01:00 [DBG] View lookup cache hit for view '_GridColumnHeader' in controller 'Persons'.
2023-07-05 23:32:10.584 +01:00 [DBG] View lookup cache hit for view '_GridColumnHeader' in controller 'Persons'.
2023-07-05 23:32:10.586 +01:00 [DBG] View lookup cache hit for view '_GridColumnHeader' in controller 'Persons'.
2023-07-05 23:32:10.589 +01:00 [DBG] View lookup cache hit for view '_GridColumnHeader' in controller 'Persons'.
2023-07-05 23:32:10.592 +01:00 [DBG] View lookup cache hit for view '_GridColumnHeader' in controller 'Persons'.
2023-07-05 23:32:10.593 +01:00 [DBG] View lookup cache hit for view '_GridColumnHeader' in controller 'Persons'.
2023-07-05 23:32:10.593 +01:00 [DBG] View lookup cache hit for view '_GridColumnHeader' in controller 'Persons'.
2023-07-05 23:32:10.624 +01:00 [DBG] No endpoints found for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-07-05 23:32:10.625 +01:00 [DBG] No endpoints found for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-07-05 23:32:10.632 +01:00 [DBG] Found the endpoints ["ContactsManager.UI.Controllers.PersonsController.Index (ContactsManager.UI)","ContactsManager.UI.Controllers.PersonsController.Index (ContactsManager.UI)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-07-05 23:32:10.632 +01:00 [DBG] Successfully processed template Persons/Index for ContactsManager.UI.Controllers.PersonsController.Index (ContactsManager.UI) resulting in /Persons/Index and 
2023-07-05 23:32:10.632 +01:00 [DBG] Link generation succeeded for endpoints ["ContactsManager.UI.Controllers.PersonsController.Index (ContactsManager.UI)","ContactsManager.UI.Controllers.PersonsController.Index (ContactsManager.UI)"] with result /Persons/Index
2023-07-05 23:32:10.637 +01:00 [DBG] Found the endpoints ["ContactsManager.UI.Controllers.CountriesController.UploadFromExcel (ContactsManager.UI)","ContactsManager.UI.Controllers.CountriesController.UploadFromExcel (ContactsManager.UI)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-07-05 23:32:10.637 +01:00 [DBG] Successfully processed template Countries/UploadFromExcel for ContactsManager.UI.Controllers.CountriesController.UploadFromExcel (ContactsManager.UI) resulting in /Countries/UploadFromExcel and 
2023-07-05 23:32:10.638 +01:00 [DBG] Link generation succeeded for endpoints ["ContactsManager.UI.Controllers.CountriesController.UploadFromExcel (ContactsManager.UI)","ContactsManager.UI.Controllers.CountriesController.UploadFromExcel (ContactsManager.UI)"] with result /Countries/UploadFromExcel
2023-07-05 23:32:10.673 +01:00 [INF] Executed ViewResult - view Index executed in 607.791ms.
2023-07-05 23:32:10.674 +01:00 [INF] after logic of PersonsListResultFilter.OnResultExecutionAsync method
2023-07-05 23:32:10.677 +01:00 [INF] Executed action ContactsManager.UI.Controllers.PersonsController.Index (ContactsManager.UI) in 3404.0205ms
2023-07-05 23:32:10.677 +01:00 [INF] Executed endpoint 'ContactsManager.UI.Controllers.PersonsController.Index (ContactsManager.UI)'
2023-07-05 23:32:10.678 +01:00 [INF] Response:
StatusCode: 200
X-Custom-Key-From-Global: [Redacted]
X-Custom-Key-From-Action-Method: [Redacted]
X-Custom-Key-From-Controller: [Redacted]
Content-Type: text/html; charset=utf-8
Last-Modified: 05-07-2023 23:32
2023-07-05 23:32:10.681 +01:00 [INF] HTTP GET /Persons/Index responded 200 in 3619.0834 ms
2023-07-05 23:32:10.696 +01:00 [DBG] 'ApplicationDbContext' disposed.
2023-07-05 23:32:10.700 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost/Persons/Index - - - 200 - text/html;+charset=utf-8 3663.1772ms
2023-07-05 23:32:10.874 +01:00 [DBG] Hosting stopping
2023-07-05 23:32:10.875 +01:00 [DBG] Hosting stopped
2023-07-05 23:32:10.875 +01:00 [DBG] Hosting stopping
2023-07-05 23:32:10.876 +01:00 [DBG] Hosting stopped
