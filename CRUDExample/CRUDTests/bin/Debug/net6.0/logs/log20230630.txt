2023-06-30 18:05:14.723 +01:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2023-06-30 18:05:15.178 +01:00 [DBG] Hosting starting
2023-06-30 18:05:15.246 +01:00 [INF] User profile is available. Using 'C:\Users\YoussefBaba\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-06-30 18:05:15.259 +01:00 [DBG] Reading data from file 'C:\Users\YoussefBaba\AppData\Local\ASP.NET\DataProtection-Keys\key-086a6081-eb03-4bb1-a34d-5120bae08b88.xml'.
2023-06-30 18:05:15.264 +01:00 [DBG] Reading data from file 'C:\Users\YoussefBaba\AppData\Local\ASP.NET\DataProtection-Keys\key-a87a6934-b999-4d05-b268-66210133ed23.xml'.
2023-06-30 18:05:15.300 +01:00 [DBG] Found key {086a6081-eb03-4bb1-a34d-5120bae08b88}.
2023-06-30 18:05:15.310 +01:00 [DBG] Found key {a87a6934-b999-4d05-b268-66210133ed23}.
2023-06-30 18:05:15.390 +01:00 [DBG] Considering key {a87a6934-b999-4d05-b268-66210133ed23} with expiration date 2023-08-27 09:39:32Z as default key.
2023-06-30 18:05:15.394 +01:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2023-06-30 18:05:15.409 +01:00 [DBG] Decrypting secret element using Windows DPAPI.
2023-06-30 18:05:15.413 +01:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2023-06-30 18:05:15.463 +01:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2023-06-30 18:05:15.471 +01:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2023-06-30 18:05:15.482 +01:00 [DBG] Using key {a87a6934-b999-4d05-b268-66210133ed23} as the default key.
2023-06-30 18:05:15.484 +01:00 [DBG] Key ring with default key {a87a6934-b999-4d05-b268-66210133ed23} was loaded during application startup.
2023-06-30 18:05:15.550 +01:00 [DBG] Loaded hosting startup assembly CRUDExample
2023-06-30 18:05:15.552 +01:00 [DBG] Hosting started
2023-06-30 18:05:15.758 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost/Persons/Index - -
2023-06-30 18:05:15.765 +01:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2023-06-30 18:05:15.794 +01:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: http
PathBase: 
Path: /Persons/Index
Host: localhost
2023-06-30 18:05:15.799 +01:00 [DBG] The request path /Persons/Index does not match a supported file type
2023-06-30 18:05:15.963 +01:00 [DBG] 1 candidate(s) found for the request path '/Persons/Index'
2023-06-30 18:05:15.989 +01:00 [DBG] Endpoint 'CRUDExample.Controllers.PersonsController.Index (CRUDExample)' with route pattern 'Persons/Index' is valid for the request path '/Persons/Index'
2023-06-30 18:05:15.993 +01:00 [DBG] Request matched endpoint 'CRUDExample.Controllers.PersonsController.Index (CRUDExample)'
2023-06-30 18:05:15.995 +01:00 [INF] Executing endpoint 'CRUDExample.Controllers.PersonsController.Index (CRUDExample)'
2023-06-30 18:05:16.175 +01:00 [INF] Route matched with {action = "Index", controller = "Persons"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index(System.String, System.String, System.String, ServiceContracts.Enums.SortOrderOptions) on controller CRUDExample.Controllers.PersonsController (CRUDExample).
2023-06-30 18:05:16.178 +01:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2023-06-30 18:05:16.179 +01:00 [DBG] Execution plan of resource filters (in the following order): ["Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.SaveTempDataFilter"]
2023-06-30 18:05:16.181 +01:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.Filters.ControllerActionFilter (Order: -2147483648)","Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","CRUDExample.Filters.ActionFilters.ResponseHeaderActionFilter (Order: 3)","CRUDExample.Filters.ActionFilters.ResponseHeaderActionFilter (Order: 1)","CRUDExample.Filters.ActionFilters.ResponseHeaderActionFilter (Order: 2)","CRUDExample.Filters.ActionFilters.PersonsListActionFilter (Order: 4)"]
2023-06-30 18:05:16.181 +01:00 [DBG] Execution plan of exception filters (in the following order): ["CRUDExample.Filters.ExceptionFilters.HandleExceptionFilter"]
2023-06-30 18:05:16.182 +01:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.SaveTempDataFilter","CRUDExample.Filters.ResultFilters.PersonsAlwaysRunResultFilter","CRUDExample.Filters.ResultFilters.PersonsListResultFilter"]
2023-06-30 18:05:16.184 +01:00 [DBG] Executing controller factory for controller CRUDExample.Controllers.PersonsController (CRUDExample)
2023-06-30 18:05:16.780 +01:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2023-06-30 18:05:16.913 +01:00 [DBG] Executed controller factory for controller CRUDExample.Controllers.PersonsController (CRUDExample)
2023-06-30 18:05:16.924 +01:00 [DBG] Attempting to bind parameter 'searchBy' of type 'System.String' ...
2023-06-30 18:05:16.928 +01:00 [DBG] Attempting to bind parameter 'searchBy' of type 'System.String' using the name '' in request data ...
2023-06-30 18:05:16.930 +01:00 [DBG] Could not find a value in the request with name '' for binding parameter 'searchBy' of type 'System.String'.
2023-06-30 18:05:16.931 +01:00 [DBG] Done attempting to bind parameter 'searchBy' of type 'System.String'.
2023-06-30 18:05:16.932 +01:00 [DBG] Done attempting to bind parameter 'searchBy' of type 'System.String'.
2023-06-30 18:05:16.932 +01:00 [DBG] Attempting to validate the bound parameter 'searchBy' of type 'System.String' ...
2023-06-30 18:05:16.956 +01:00 [DBG] Done attempting to validate the bound parameter 'searchBy' of type 'System.String'.
2023-06-30 18:05:16.962 +01:00 [DBG] Attempting to bind parameter 'searchString' of type 'System.String' ...
2023-06-30 18:05:16.963 +01:00 [DBG] Attempting to bind parameter 'searchString' of type 'System.String' using the name '' in request data ...
2023-06-30 18:05:16.964 +01:00 [DBG] Could not find a value in the request with name '' for binding parameter 'searchString' of type 'System.String'.
2023-06-30 18:05:16.964 +01:00 [DBG] Done attempting to bind parameter 'searchString' of type 'System.String'.
2023-06-30 18:05:16.964 +01:00 [DBG] Done attempting to bind parameter 'searchString' of type 'System.String'.
2023-06-30 18:05:16.965 +01:00 [DBG] Attempting to validate the bound parameter 'searchString' of type 'System.String' ...
2023-06-30 18:05:16.965 +01:00 [DBG] Done attempting to validate the bound parameter 'searchString' of type 'System.String'.
2023-06-30 18:05:16.966 +01:00 [DBG] Attempting to bind parameter 'sortBy' of type 'System.String' ...
2023-06-30 18:05:16.966 +01:00 [DBG] Attempting to bind parameter 'sortBy' of type 'System.String' using the name '' in request data ...
2023-06-30 18:05:16.966 +01:00 [DBG] Could not find a value in the request with name '' for binding parameter 'sortBy' of type 'System.String'.
2023-06-30 18:05:16.967 +01:00 [DBG] Done attempting to bind parameter 'sortBy' of type 'System.String'.
2023-06-30 18:05:16.967 +01:00 [DBG] Done attempting to bind parameter 'sortBy' of type 'System.String'.
2023-06-30 18:05:16.967 +01:00 [DBG] Attempting to validate the bound parameter 'sortBy' of type 'System.String' ...
2023-06-30 18:05:16.969 +01:00 [DBG] Done attempting to validate the bound parameter 'sortBy' of type 'System.String'.
2023-06-30 18:05:16.969 +01:00 [DBG] Attempting to bind parameter 'sortOrder' of type 'ServiceContracts.Enums.SortOrderOptions' ...
2023-06-30 18:05:16.971 +01:00 [DBG] Attempting to bind parameter 'sortOrder' of type 'ServiceContracts.Enums.SortOrderOptions' using the name '' in request data ...
2023-06-30 18:05:16.972 +01:00 [DBG] Could not find a value in the request with name '' for binding parameter 'sortOrder' of type 'ServiceContracts.Enums.SortOrderOptions'.
2023-06-30 18:05:16.972 +01:00 [DBG] Done attempting to bind parameter 'sortOrder' of type 'ServiceContracts.Enums.SortOrderOptions'.
2023-06-30 18:05:16.973 +01:00 [DBG] Done attempting to bind parameter 'sortOrder' of type 'ServiceContracts.Enums.SortOrderOptions'.
2023-06-30 18:05:16.973 +01:00 [DBG] Attempting to validate the bound parameter 'sortOrder' of type 'ServiceContracts.Enums.SortOrderOptions' ...
2023-06-30 18:05:16.974 +01:00 [DBG] Done attempting to validate the bound parameter 'sortOrder' of type 'ServiceContracts.Enums.SortOrderOptions'.
2023-06-30 18:05:16.979 +01:00 [INF] before logic of ResponseHeaderActionFilter.OnActionExecutionAsync method
2023-06-30 18:05:16.979 +01:00 [INF] before logic of ResponseHeaderActionFilter.OnActionExecutionAsync method
2023-06-30 18:05:17.013 +01:00 [INF] Before logic of PersonsListActionFilter.OnActionExecutionAsync method
2023-06-30 18:05:17.013 +01:00 [DBG] Order: 4
2023-06-30 18:05:17.015 +01:00 [INF] Index action method of PersonsController
2023-06-30 18:05:17.015 +01:00 [DBG] searchBy: null, searchString: null, sortBy: PersonName, sortOrder: "ASC"
2023-06-30 18:05:17.017 +01:00 [INF] GetAllPersons method of PersonsService
2023-06-30 18:05:17.022 +01:00 [INF] GetAllPersons method of PersonsRepository
2023-06-30 18:05:20.010 +01:00 [INF] Entity Framework Core 6.0.7 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=DatabaseForTesting 
2023-06-30 18:05:20.168 +01:00 [DBG] Compiling query expression: 
'DbSet<Person>()
    .Include("Country")'
2023-06-30 18:05:20.619 +01:00 [DBG] Including navigation: 'Person.Country'.
2023-06-30 18:05:21.309 +01:00 [DBG] Generated query execution expression: 
'queryContext => new QueryingEnumerable<Person>(
    queryContext, 
    InMemoryQueryExpression.LeftJoin<ValueBuffer, ValueBuffer, Guid?, ValueBuffer>(
        outer: InMemoryShapedQueryCompilingExpressionVisitor.Table(
            queryContext: queryContext, 
            entityType: EntityType: Person), 
        inner: InMemoryShapedQueryCompilingExpressionVisitor.Table(
            queryContext: queryContext, 
            entityType: EntityType: Country), 
        outerKeySelector: valueBuffer => ExpressionExtensions.ValueBufferTryReadValue<Guid?>(
            valueBuffer: valueBuffer, 
            index: 2, 
            property: Property: Person.CountryID (Guid?) FK Index), 
        innerKeySelector: valueBuffer => (Guid?)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
            valueBuffer: valueBuffer, 
            index: 0, 
            property: Property: Country.CountryID (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
        resultSelector: (outer, inner) => new ValueBuffer(new object[]
        { 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: outer, 
                index: 0, 
                property: Property: Person.PersonID (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: outer, 
                index: 1, 
                property: Property: Person.Address (string) MaxLength(200)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid?>(
                valueBuffer: outer, 
                index: 2, 
                property: Property: Person.CountryID (Guid?) FK Index), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<DateTime?>(
                valueBuffer: outer, 
                index: 3, 
                property: Property: Person.DateOfBirth (DateTime?)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: outer, 
                index: 4, 
                property: Property: Person.Email (string) MaxLength(40)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: outer, 
                index: 5, 
                property: Property: Person.Gender (string) MaxLength(10)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: outer, 
                index: 6, 
                property: Property: Person.PersonName (string) MaxLength(40)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<bool>(
                valueBuffer: outer, 
                index: 7, 
                property: Property: Person.ReceiveNewsLetters (bool) Required), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: outer, 
                index: 8, 
                property: Property: Person.SSN (string)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<bool>(
                valueBuffer: outer, 
                index: 9, 
                property: Property: Person.SSNIsChanged (bool) Required), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: outer, 
                index: 10, 
                property: Property: Person.TIN (string)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid?>(
                valueBuffer: inner, 
                index: 0, 
                property: Property: Country.CountryID (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: inner, 
                index: 1, 
                property: Property: Country.CountryName (string)) 
        }), 
        defaultValue: ValueBuffer)
        .Select(valueBuffer => new ValueBuffer(new object[]
        { 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 0, 
                property: Property: Person.PersonID (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 1, 
                property: Property: Person.Address (string) MaxLength(200)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid?>(
                valueBuffer: valueBuffer, 
                index: 2, 
                property: Property: Person.CountryID (Guid?) FK Index), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<DateTime?>(
                valueBuffer: valueBuffer, 
                index: 3, 
                property: Property: Person.DateOfBirth (DateTime?)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 4, 
                property: Property: Person.Email (string) MaxLength(40)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 5, 
                property: Property: Person.Gender (string) MaxLength(10)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 6, 
                property: Property: Person.PersonName (string) MaxLength(40)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<bool>(
                valueBuffer: valueBuffer, 
                index: 7, 
                property: Property: Person.ReceiveNewsLetters (bool) Required), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 8, 
                property: Property: Person.SSN (string)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<bool>(
                valueBuffer: valueBuffer, 
                index: 9, 
                property: Property: Person.SSNIsChanged (bool) Required), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 10, 
                property: Property: Person.TIN (string)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid?>(
                valueBuffer: valueBuffer, 
                index: 11, 
                property: Property: Country.CountryID (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 12, 
                property: Property: Country.CountryName (string)) 
        }))
        .Select(valueBuffer => new ValueBuffer(new object[]
        { 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 0, 
                property: Property: Person.PersonID (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 1, 
                property: Property: Person.Address (string) MaxLength(200)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid?>(
                valueBuffer: valueBuffer, 
                index: 2, 
                property: Property: Person.CountryID (Guid?) FK Index), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<DateTime?>(
                valueBuffer: valueBuffer, 
                index: 3, 
                property: Property: Person.DateOfBirth (DateTime?)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 4, 
                property: Property: Person.Email (string) MaxLength(40)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 5, 
                property: Property: Person.Gender (string) MaxLength(10)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 6, 
                property: Property: Person.PersonName (string) MaxLength(40)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<bool>(
                valueBuffer: valueBuffer, 
                index: 7, 
                property: Property: Person.ReceiveNewsLetters (bool) Required), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 8, 
                property: Property: Person.SSN (string)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<bool>(
                valueBuffer: valueBuffer, 
                index: 9, 
                property: Property: Person.SSNIsChanged (bool) Required), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 10, 
                property: Property: Person.TIN (string)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid?>(
                valueBuffer: valueBuffer, 
                index: 11, 
                property: Property: Country.CountryID (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 12, 
                property: Property: Country.CountryName (string)) 
        })), 
    Func<QueryContext, ValueBuffer, Person>, 
    Entities.ApplicationDbContext, 
    False, 
    True
)'
2023-06-30 18:05:21.404 +01:00 [INF] GetFilteredPersons method of PersonsService
2023-06-30 18:05:21.404 +01:00 [INF] GetAllPersons method of PersonsRepository
2023-06-30 18:05:21.411 +01:00 [INF] GetAllPersons method of PersonsRepository
2023-06-30 18:05:21.413 +01:00 [INF] Time for Filtered Persons from Database completed in 1.0 ms
2023-06-30 18:05:21.428 +01:00 [INF] GetSortedPersons method of PersonsService
2023-06-30 18:05:21.429 +01:00 [INF] After logic of PersonsListActionFilter.OnActionExecutionAsync method
2023-06-30 18:05:21.429 +01:00 [DBG] Order: 4
2023-06-30 18:05:21.431 +01:00 [INF] after logic of ResponseHeaderActionFilter.OnActionExecutionAsync method
2023-06-30 18:05:21.431 +01:00 [INF] after logic of ResponseHeaderActionFilter.OnActionExecutionAsync method
2023-06-30 18:05:21.437 +01:00 [INF] before logic of PersonsListResultFilter.OnResultExecutionAsync method
2023-06-30 18:05:21.451 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Countries/UploadFromExcel.cshtml'.
2023-06-30 18:05:21.451 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Persons/Create.cshtml'.
2023-06-30 18:05:21.452 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Persons/Delete.cshtml'.
2023-06-30 18:05:21.452 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Persons/Edit.cshtml'.
2023-06-30 18:05:21.452 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Persons/Index.cshtml'.
2023-06-30 18:05:21.452 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Persons/PersonsPDF.cshtml'.
2023-06-30 18:05:21.452 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Shared/_Breadcrumb.cshtml'.
2023-06-30 18:05:21.453 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Shared/_GridColumnHeader.cshtml'.
2023-06-30 18:05:21.453 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Shared/_Layout.cshtml'.
2023-06-30 18:05:21.453 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/_ViewImports.cshtml'.
2023-06-30 18:05:21.453 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/_ViewStart.cshtml'.
2023-06-30 18:05:21.470 +01:00 [DBG] View lookup cache miss for view 'Index' in controller 'Persons'.
2023-06-30 18:05:21.487 +01:00 [INF] Executing ViewResult, running view Index.
2023-06-30 18:05:21.513 +01:00 [DBG] The view path '/Views/Persons/Index.cshtml' was found in 19.2248ms.
2023-06-30 18:05:21.766 +01:00 [DBG] Found the endpoints ["CRUDExample.Controllers.PersonsController.Index (CRUDExample)","CRUDExample.Controllers.PersonsController.Index (CRUDExample)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-06-30 18:05:21.802 +01:00 [DBG] Successfully processed template Persons/Index for CRUDExample.Controllers.PersonsController.Index (CRUDExample) resulting in /Persons/Index and 
2023-06-30 18:05:21.805 +01:00 [DBG] Link generation succeeded for endpoints ["CRUDExample.Controllers.PersonsController.Index (CRUDExample)","CRUDExample.Controllers.PersonsController.Index (CRUDExample)"] with result /Persons/Index
2023-06-30 18:05:21.867 +01:00 [DBG] View lookup cache miss for view '_Breadcrumb' in controller 'Persons'.
2023-06-30 18:05:21.971 +01:00 [DBG] Found the endpoints ["CRUDExample.Controllers.PersonsController.Create (CRUDExample)","CRUDExample.Controllers.PersonsController.Create (CRUDExample)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-06-30 18:05:21.972 +01:00 [DBG] Successfully processed template Persons/Create for CRUDExample.Controllers.PersonsController.Create (CRUDExample) resulting in /Persons/Create and 
2023-06-30 18:05:21.974 +01:00 [DBG] Link generation succeeded for endpoints ["CRUDExample.Controllers.PersonsController.Create (CRUDExample)","CRUDExample.Controllers.PersonsController.Create (CRUDExample)"] with result /Persons/Create
2023-06-30 18:05:21.981 +01:00 [DBG] Found the endpoints ["CRUDExample.Controllers.PersonsController.PersonsPDF (CRUDExample)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-06-30 18:05:21.982 +01:00 [DBG] Successfully processed template Persons/PersonsPDF for CRUDExample.Controllers.PersonsController.PersonsPDF (CRUDExample) resulting in /Persons/PersonsPDF and 
2023-06-30 18:05:21.982 +01:00 [DBG] Link generation succeeded for endpoints ["CRUDExample.Controllers.PersonsController.PersonsPDF (CRUDExample)"] with result /Persons/PersonsPDF
2023-06-30 18:05:21.984 +01:00 [DBG] Found the endpoints ["CRUDExample.Controllers.PersonsController.PersonsCSV (CRUDExample)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-06-30 18:05:21.985 +01:00 [DBG] Successfully processed template Persons/PersonsCSV for CRUDExample.Controllers.PersonsController.PersonsCSV (CRUDExample) resulting in /Persons/PersonsCSV and 
2023-06-30 18:05:21.985 +01:00 [DBG] Link generation succeeded for endpoints ["CRUDExample.Controllers.PersonsController.PersonsCSV (CRUDExample)"] with result /Persons/PersonsCSV
2023-06-30 18:05:21.987 +01:00 [DBG] Found the endpoints ["CRUDExample.Controllers.PersonsController.PersonsExcel (CRUDExample)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-06-30 18:05:21.987 +01:00 [DBG] Successfully processed template Persons/PersonsExcel for CRUDExample.Controllers.PersonsController.PersonsExcel (CRUDExample) resulting in /Persons/PersonsExcel and 
2023-06-30 18:05:21.987 +01:00 [DBG] Link generation succeeded for endpoints ["CRUDExample.Controllers.PersonsController.PersonsExcel (CRUDExample)"] with result /Persons/PersonsExcel
2023-06-30 18:05:22.061 +01:00 [DBG] Found the endpoints ["CRUDExample.Controllers.PersonsController.Index (CRUDExample)","CRUDExample.Controllers.PersonsController.Index (CRUDExample)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-06-30 18:05:22.062 +01:00 [DBG] Successfully processed template Persons/Index for CRUDExample.Controllers.PersonsController.Index (CRUDExample) resulting in /Persons/Index and 
2023-06-30 18:05:22.062 +01:00 [DBG] Link generation succeeded for endpoints ["CRUDExample.Controllers.PersonsController.Index (CRUDExample)","CRUDExample.Controllers.PersonsController.Index (CRUDExample)"] with result /Persons/Index
2023-06-30 18:05:22.064 +01:00 [DBG] View lookup cache miss for view '_GridColumnHeader' in controller 'Persons'.
2023-06-30 18:05:22.218 +01:00 [DBG] View lookup cache hit for view '_GridColumnHeader' in controller 'Persons'.
2023-06-30 18:05:22.255 +01:00 [DBG] View lookup cache hit for view '_GridColumnHeader' in controller 'Persons'.
2023-06-30 18:05:22.255 +01:00 [DBG] View lookup cache hit for view '_GridColumnHeader' in controller 'Persons'.
2023-06-30 18:05:22.263 +01:00 [DBG] View lookup cache hit for view '_GridColumnHeader' in controller 'Persons'.
2023-06-30 18:05:22.268 +01:00 [DBG] View lookup cache hit for view '_GridColumnHeader' in controller 'Persons'.
2023-06-30 18:05:22.269 +01:00 [DBG] View lookup cache hit for view '_GridColumnHeader' in controller 'Persons'.
2023-06-30 18:05:22.270 +01:00 [DBG] View lookup cache hit for view '_GridColumnHeader' in controller 'Persons'.
2023-06-30 18:05:22.321 +01:00 [DBG] No endpoints found for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-06-30 18:05:22.325 +01:00 [DBG] No endpoints found for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-06-30 18:05:22.336 +01:00 [DBG] Found the endpoints ["CRUDExample.Controllers.PersonsController.Index (CRUDExample)","CRUDExample.Controllers.PersonsController.Index (CRUDExample)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-06-30 18:05:22.337 +01:00 [DBG] Successfully processed template Persons/Index for CRUDExample.Controllers.PersonsController.Index (CRUDExample) resulting in /Persons/Index and 
2023-06-30 18:05:22.337 +01:00 [DBG] Link generation succeeded for endpoints ["CRUDExample.Controllers.PersonsController.Index (CRUDExample)","CRUDExample.Controllers.PersonsController.Index (CRUDExample)"] with result /Persons/Index
2023-06-30 18:05:22.345 +01:00 [DBG] Found the endpoints ["CRUDExample.Controllers.CountriesController.UploadFromExcel (CRUDExample)","CRUDExample.Controllers.CountriesController.UploadFromExcel (CRUDExample)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-06-30 18:05:22.346 +01:00 [DBG] Successfully processed template Countries/UploadFromExcel for CRUDExample.Controllers.CountriesController.UploadFromExcel (CRUDExample) resulting in /Countries/UploadFromExcel and 
2023-06-30 18:05:22.346 +01:00 [DBG] Link generation succeeded for endpoints ["CRUDExample.Controllers.CountriesController.UploadFromExcel (CRUDExample)","CRUDExample.Controllers.CountriesController.UploadFromExcel (CRUDExample)"] with result /Countries/UploadFromExcel
2023-06-30 18:05:22.397 +01:00 [INF] Executed ViewResult - view Index executed in 929.2064ms.
2023-06-30 18:05:22.398 +01:00 [INF] after logic of PersonsListResultFilter.OnResultExecutionAsync method
2023-06-30 18:05:22.401 +01:00 [INF] Executed action CRUDExample.Controllers.PersonsController.Index (CRUDExample) in 6218.417ms
2023-06-30 18:05:22.401 +01:00 [INF] Executed endpoint 'CRUDExample.Controllers.PersonsController.Index (CRUDExample)'
2023-06-30 18:05:22.402 +01:00 [INF] Response:
StatusCode: 200
X-Custom-Key-From-Global: [Redacted]
X-Custom-Key-From-Action-Method: [Redacted]
X-Custom-Key-From-Controller: [Redacted]
Content-Type: text/html; charset=utf-8
Last-Modified: 30-06-2023 18:05
2023-06-30 18:05:22.410 +01:00 [INF] HTTP GET /Persons/Index responded 200 in 6625.6477 ms
2023-06-30 18:05:22.436 +01:00 [DBG] 'ApplicationDbContext' disposed.
2023-06-30 18:05:22.442 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost/Persons/Index - - - 200 - text/html;+charset=utf-8 6695.6343ms
2023-06-30 18:05:22.653 +01:00 [DBG] Hosting stopping
2023-06-30 18:05:22.655 +01:00 [DBG] Hosting stopped
2023-06-30 18:05:22.658 +01:00 [DBG] Hosting stopping
2023-06-30 18:05:22.659 +01:00 [DBG] Hosting stopped
2023-06-30 18:36:26.498 +01:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2023-06-30 18:36:26.729 +01:00 [DBG] Hosting starting
2023-06-30 18:36:26.754 +01:00 [INF] User profile is available. Using 'C:\Users\YoussefBaba\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-06-30 18:36:26.763 +01:00 [DBG] Reading data from file 'C:\Users\YoussefBaba\AppData\Local\ASP.NET\DataProtection-Keys\key-086a6081-eb03-4bb1-a34d-5120bae08b88.xml'.
2023-06-30 18:36:26.766 +01:00 [DBG] Reading data from file 'C:\Users\YoussefBaba\AppData\Local\ASP.NET\DataProtection-Keys\key-a87a6934-b999-4d05-b268-66210133ed23.xml'.
2023-06-30 18:36:26.783 +01:00 [DBG] Found key {086a6081-eb03-4bb1-a34d-5120bae08b88}.
2023-06-30 18:36:26.787 +01:00 [DBG] Found key {a87a6934-b999-4d05-b268-66210133ed23}.
2023-06-30 18:36:26.830 +01:00 [DBG] Considering key {a87a6934-b999-4d05-b268-66210133ed23} with expiration date 2023-08-27 09:39:32Z as default key.
2023-06-30 18:36:26.840 +01:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2023-06-30 18:36:26.854 +01:00 [DBG] Decrypting secret element using Windows DPAPI.
2023-06-30 18:36:26.858 +01:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2023-06-30 18:36:26.901 +01:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2023-06-30 18:36:26.906 +01:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2023-06-30 18:36:26.919 +01:00 [DBG] Using key {a87a6934-b999-4d05-b268-66210133ed23} as the default key.
2023-06-30 18:36:26.921 +01:00 [DBG] Key ring with default key {a87a6934-b999-4d05-b268-66210133ed23} was loaded during application startup.
2023-06-30 18:36:26.953 +01:00 [DBG] Loaded hosting startup assembly CRUDExample
2023-06-30 18:36:26.955 +01:00 [DBG] Hosting started
2023-06-30 18:36:27.087 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost/Persons/Index - -
2023-06-30 18:36:27.116 +01:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2023-06-30 18:36:27.141 +01:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: http
PathBase: 
Path: /Persons/Index
Host: localhost
2023-06-30 18:36:27.151 +01:00 [DBG] The request path /Persons/Index does not match a supported file type
2023-06-30 18:36:27.313 +01:00 [DBG] 1 candidate(s) found for the request path '/Persons/Index'
2023-06-30 18:36:27.335 +01:00 [DBG] Endpoint 'CRUDExample.Controllers.PersonsController.Index (CRUDExample)' with route pattern 'Persons/Index' is valid for the request path '/Persons/Index'
2023-06-30 18:36:27.337 +01:00 [DBG] Request matched endpoint 'CRUDExample.Controllers.PersonsController.Index (CRUDExample)'
2023-06-30 18:36:27.339 +01:00 [INF] Executing endpoint 'CRUDExample.Controllers.PersonsController.Index (CRUDExample)'
2023-06-30 18:36:27.542 +01:00 [INF] Route matched with {action = "Index", controller = "Persons"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index(System.String, System.String, System.String, ServiceContracts.Enums.SortOrderOptions) on controller CRUDExample.Controllers.PersonsController (CRUDExample).
2023-06-30 18:36:27.545 +01:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2023-06-30 18:36:27.547 +01:00 [DBG] Execution plan of resource filters (in the following order): ["Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.SaveTempDataFilter"]
2023-06-30 18:36:27.548 +01:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.Filters.ControllerActionFilter (Order: -2147483648)","Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","CRUDExample.Filters.ActionFilters.ResponseHeaderActionFilter (Order: 3)","CRUDExample.Filters.ActionFilters.ResponseHeaderActionFilter (Order: 1)","CRUDExample.Filters.ActionFilters.ResponseHeaderActionFilter (Order: 2)","CRUDExample.Filters.ActionFilters.PersonsListActionFilter (Order: 4)"]
2023-06-30 18:36:27.549 +01:00 [DBG] Execution plan of exception filters (in the following order): ["CRUDExample.Filters.ExceptionFilters.HandleExceptionFilter"]
2023-06-30 18:36:27.549 +01:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.SaveTempDataFilter","CRUDExample.Filters.ResultFilters.PersonsAlwaysRunResultFilter","CRUDExample.Filters.ResultFilters.PersonsListResultFilter"]
2023-06-30 18:36:27.552 +01:00 [DBG] Executing controller factory for controller CRUDExample.Controllers.PersonsController (CRUDExample)
2023-06-30 18:36:27.909 +01:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2023-06-30 18:36:27.999 +01:00 [DBG] Executed controller factory for controller CRUDExample.Controllers.PersonsController (CRUDExample)
2023-06-30 18:36:28.021 +01:00 [DBG] Attempting to bind parameter 'searchBy' of type 'System.String' ...
2023-06-30 18:36:28.025 +01:00 [DBG] Attempting to bind parameter 'searchBy' of type 'System.String' using the name '' in request data ...
2023-06-30 18:36:28.027 +01:00 [DBG] Could not find a value in the request with name '' for binding parameter 'searchBy' of type 'System.String'.
2023-06-30 18:36:28.028 +01:00 [DBG] Done attempting to bind parameter 'searchBy' of type 'System.String'.
2023-06-30 18:36:28.030 +01:00 [DBG] Done attempting to bind parameter 'searchBy' of type 'System.String'.
2023-06-30 18:36:28.032 +01:00 [DBG] Attempting to validate the bound parameter 'searchBy' of type 'System.String' ...
2023-06-30 18:36:28.054 +01:00 [DBG] Done attempting to validate the bound parameter 'searchBy' of type 'System.String'.
2023-06-30 18:36:28.059 +01:00 [DBG] Attempting to bind parameter 'searchString' of type 'System.String' ...
2023-06-30 18:36:28.060 +01:00 [DBG] Attempting to bind parameter 'searchString' of type 'System.String' using the name '' in request data ...
2023-06-30 18:36:28.060 +01:00 [DBG] Could not find a value in the request with name '' for binding parameter 'searchString' of type 'System.String'.
2023-06-30 18:36:28.060 +01:00 [DBG] Done attempting to bind parameter 'searchString' of type 'System.String'.
2023-06-30 18:36:28.060 +01:00 [DBG] Done attempting to bind parameter 'searchString' of type 'System.String'.
2023-06-30 18:36:28.061 +01:00 [DBG] Attempting to validate the bound parameter 'searchString' of type 'System.String' ...
2023-06-30 18:36:28.062 +01:00 [DBG] Done attempting to validate the bound parameter 'searchString' of type 'System.String'.
2023-06-30 18:36:28.062 +01:00 [DBG] Attempting to bind parameter 'sortBy' of type 'System.String' ...
2023-06-30 18:36:28.064 +01:00 [DBG] Attempting to bind parameter 'sortBy' of type 'System.String' using the name '' in request data ...
2023-06-30 18:36:28.065 +01:00 [DBG] Could not find a value in the request with name '' for binding parameter 'sortBy' of type 'System.String'.
2023-06-30 18:36:28.065 +01:00 [DBG] Done attempting to bind parameter 'sortBy' of type 'System.String'.
2023-06-30 18:36:28.066 +01:00 [DBG] Done attempting to bind parameter 'sortBy' of type 'System.String'.
2023-06-30 18:36:28.066 +01:00 [DBG] Attempting to validate the bound parameter 'sortBy' of type 'System.String' ...
2023-06-30 18:36:28.067 +01:00 [DBG] Done attempting to validate the bound parameter 'sortBy' of type 'System.String'.
2023-06-30 18:36:28.067 +01:00 [DBG] Attempting to bind parameter 'sortOrder' of type 'ServiceContracts.Enums.SortOrderOptions' ...
2023-06-30 18:36:28.068 +01:00 [DBG] Attempting to bind parameter 'sortOrder' of type 'ServiceContracts.Enums.SortOrderOptions' using the name '' in request data ...
2023-06-30 18:36:28.068 +01:00 [DBG] Could not find a value in the request with name '' for binding parameter 'sortOrder' of type 'ServiceContracts.Enums.SortOrderOptions'.
2023-06-30 18:36:28.068 +01:00 [DBG] Done attempting to bind parameter 'sortOrder' of type 'ServiceContracts.Enums.SortOrderOptions'.
2023-06-30 18:36:28.069 +01:00 [DBG] Done attempting to bind parameter 'sortOrder' of type 'ServiceContracts.Enums.SortOrderOptions'.
2023-06-30 18:36:28.069 +01:00 [DBG] Attempting to validate the bound parameter 'sortOrder' of type 'ServiceContracts.Enums.SortOrderOptions' ...
2023-06-30 18:36:28.069 +01:00 [DBG] Done attempting to validate the bound parameter 'sortOrder' of type 'ServiceContracts.Enums.SortOrderOptions'.
2023-06-30 18:36:28.073 +01:00 [INF] before logic of ResponseHeaderActionFilter.OnActionExecutionAsync method
2023-06-30 18:36:28.073 +01:00 [INF] before logic of ResponseHeaderActionFilter.OnActionExecutionAsync method
2023-06-30 18:36:28.101 +01:00 [INF] Before logic of PersonsListActionFilter.OnActionExecutionAsync method
2023-06-30 18:36:28.102 +01:00 [DBG] Order: 4
2023-06-30 18:36:28.103 +01:00 [INF] Index action method of PersonsController
2023-06-30 18:36:28.103 +01:00 [DBG] searchBy: null, searchString: null, sortBy: PersonName, sortOrder: "ASC"
2023-06-30 18:36:28.104 +01:00 [INF] GetAllPersons method of PersonsService
2023-06-30 18:36:28.106 +01:00 [INF] GetAllPersons method of PersonsRepository
2023-06-30 18:36:30.411 +01:00 [INF] Entity Framework Core 6.0.7 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=DatabaseForTesting 
2023-06-30 18:36:30.589 +01:00 [DBG] Compiling query expression: 
'DbSet<Person>()
    .Include("Country")'
2023-06-30 18:36:30.963 +01:00 [DBG] Including navigation: 'Person.Country'.
2023-06-30 18:36:31.428 +01:00 [DBG] Generated query execution expression: 
'queryContext => new QueryingEnumerable<Person>(
    queryContext, 
    InMemoryQueryExpression.LeftJoin<ValueBuffer, ValueBuffer, Guid?, ValueBuffer>(
        outer: InMemoryShapedQueryCompilingExpressionVisitor.Table(
            queryContext: queryContext, 
            entityType: EntityType: Person), 
        inner: InMemoryShapedQueryCompilingExpressionVisitor.Table(
            queryContext: queryContext, 
            entityType: EntityType: Country), 
        outerKeySelector: valueBuffer => ExpressionExtensions.ValueBufferTryReadValue<Guid?>(
            valueBuffer: valueBuffer, 
            index: 2, 
            property: Property: Person.CountryID (Guid?) FK Index), 
        innerKeySelector: valueBuffer => (Guid?)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
            valueBuffer: valueBuffer, 
            index: 0, 
            property: Property: Country.CountryID (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
        resultSelector: (outer, inner) => new ValueBuffer(new object[]
        { 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: outer, 
                index: 0, 
                property: Property: Person.PersonID (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: outer, 
                index: 1, 
                property: Property: Person.Address (string) MaxLength(200)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid?>(
                valueBuffer: outer, 
                index: 2, 
                property: Property: Person.CountryID (Guid?) FK Index), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<DateTime?>(
                valueBuffer: outer, 
                index: 3, 
                property: Property: Person.DateOfBirth (DateTime?)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: outer, 
                index: 4, 
                property: Property: Person.Email (string) MaxLength(40)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: outer, 
                index: 5, 
                property: Property: Person.Gender (string) MaxLength(10)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: outer, 
                index: 6, 
                property: Property: Person.PersonName (string) MaxLength(40)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<bool>(
                valueBuffer: outer, 
                index: 7, 
                property: Property: Person.ReceiveNewsLetters (bool) Required), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: outer, 
                index: 8, 
                property: Property: Person.SSN (string)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<bool>(
                valueBuffer: outer, 
                index: 9, 
                property: Property: Person.SSNIsChanged (bool) Required), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: outer, 
                index: 10, 
                property: Property: Person.TIN (string)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid?>(
                valueBuffer: inner, 
                index: 0, 
                property: Property: Country.CountryID (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: inner, 
                index: 1, 
                property: Property: Country.CountryName (string)) 
        }), 
        defaultValue: ValueBuffer)
        .Select(valueBuffer => new ValueBuffer(new object[]
        { 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 0, 
                property: Property: Person.PersonID (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 1, 
                property: Property: Person.Address (string) MaxLength(200)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid?>(
                valueBuffer: valueBuffer, 
                index: 2, 
                property: Property: Person.CountryID (Guid?) FK Index), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<DateTime?>(
                valueBuffer: valueBuffer, 
                index: 3, 
                property: Property: Person.DateOfBirth (DateTime?)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 4, 
                property: Property: Person.Email (string) MaxLength(40)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 5, 
                property: Property: Person.Gender (string) MaxLength(10)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 6, 
                property: Property: Person.PersonName (string) MaxLength(40)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<bool>(
                valueBuffer: valueBuffer, 
                index: 7, 
                property: Property: Person.ReceiveNewsLetters (bool) Required), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 8, 
                property: Property: Person.SSN (string)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<bool>(
                valueBuffer: valueBuffer, 
                index: 9, 
                property: Property: Person.SSNIsChanged (bool) Required), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 10, 
                property: Property: Person.TIN (string)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid?>(
                valueBuffer: valueBuffer, 
                index: 11, 
                property: Property: Country.CountryID (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 12, 
                property: Property: Country.CountryName (string)) 
        }))
        .Select(valueBuffer => new ValueBuffer(new object[]
        { 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 0, 
                property: Property: Person.PersonID (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 1, 
                property: Property: Person.Address (string) MaxLength(200)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid?>(
                valueBuffer: valueBuffer, 
                index: 2, 
                property: Property: Person.CountryID (Guid?) FK Index), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<DateTime?>(
                valueBuffer: valueBuffer, 
                index: 3, 
                property: Property: Person.DateOfBirth (DateTime?)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 4, 
                property: Property: Person.Email (string) MaxLength(40)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 5, 
                property: Property: Person.Gender (string) MaxLength(10)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 6, 
                property: Property: Person.PersonName (string) MaxLength(40)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<bool>(
                valueBuffer: valueBuffer, 
                index: 7, 
                property: Property: Person.ReceiveNewsLetters (bool) Required), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 8, 
                property: Property: Person.SSN (string)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<bool>(
                valueBuffer: valueBuffer, 
                index: 9, 
                property: Property: Person.SSNIsChanged (bool) Required), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 10, 
                property: Property: Person.TIN (string)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid?>(
                valueBuffer: valueBuffer, 
                index: 11, 
                property: Property: Country.CountryID (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 12, 
                property: Property: Country.CountryName (string)) 
        })), 
    Func<QueryContext, ValueBuffer, Person>, 
    Entities.ApplicationDbContext, 
    False, 
    True
)'
2023-06-30 18:36:31.480 +01:00 [INF] GetFilteredPersons method of PersonsService
2023-06-30 18:36:31.480 +01:00 [INF] GetAllPersons method of PersonsRepository
2023-06-30 18:36:31.486 +01:00 [INF] GetAllPersons method of PersonsRepository
2023-06-30 18:36:31.487 +01:00 [INF] Time for Filtered Persons from Database completed in 0.7 ms
2023-06-30 18:36:31.495 +01:00 [INF] GetSortedPersons method of PersonsService
2023-06-30 18:36:31.496 +01:00 [INF] After logic of PersonsListActionFilter.OnActionExecutionAsync method
2023-06-30 18:36:31.497 +01:00 [DBG] Order: 4
2023-06-30 18:36:31.499 +01:00 [INF] after logic of ResponseHeaderActionFilter.OnActionExecutionAsync method
2023-06-30 18:36:31.501 +01:00 [INF] after logic of ResponseHeaderActionFilter.OnActionExecutionAsync method
2023-06-30 18:36:31.506 +01:00 [INF] before logic of PersonsListResultFilter.OnResultExecutionAsync method
2023-06-30 18:36:31.513 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Countries/UploadFromExcel.cshtml'.
2023-06-30 18:36:31.514 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Persons/Create.cshtml'.
2023-06-30 18:36:31.514 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Persons/Delete.cshtml'.
2023-06-30 18:36:31.516 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Persons/Edit.cshtml'.
2023-06-30 18:36:31.516 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Persons/Index.cshtml'.
2023-06-30 18:36:31.517 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Persons/PersonsPDF.cshtml'.
2023-06-30 18:36:31.518 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Shared/_Breadcrumb.cshtml'.
2023-06-30 18:36:31.518 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Shared/_GridColumnHeader.cshtml'.
2023-06-30 18:36:31.518 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Shared/_Layout.cshtml'.
2023-06-30 18:36:31.519 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/_ViewImports.cshtml'.
2023-06-30 18:36:31.519 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/_ViewStart.cshtml'.
2023-06-30 18:36:31.531 +01:00 [DBG] View lookup cache miss for view 'Index' in controller 'Persons'.
2023-06-30 18:36:31.553 +01:00 [INF] Executing ViewResult, running view Index.
2023-06-30 18:36:31.600 +01:00 [DBG] The view path '/Views/Persons/Index.cshtml' was found in 24.0443ms.
2023-06-30 18:36:31.813 +01:00 [DBG] Found the endpoints ["CRUDExample.Controllers.PersonsController.Index (CRUDExample)","CRUDExample.Controllers.PersonsController.Index (CRUDExample)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-06-30 18:36:31.847 +01:00 [DBG] Successfully processed template Persons/Index for CRUDExample.Controllers.PersonsController.Index (CRUDExample) resulting in /Persons/Index and 
2023-06-30 18:36:31.850 +01:00 [DBG] Link generation succeeded for endpoints ["CRUDExample.Controllers.PersonsController.Index (CRUDExample)","CRUDExample.Controllers.PersonsController.Index (CRUDExample)"] with result /Persons/Index
2023-06-30 18:36:31.893 +01:00 [DBG] View lookup cache miss for view '_Breadcrumb' in controller 'Persons'.
2023-06-30 18:36:32.018 +01:00 [DBG] Found the endpoints ["CRUDExample.Controllers.PersonsController.Create (CRUDExample)","CRUDExample.Controllers.PersonsController.Create (CRUDExample)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-06-30 18:36:32.019 +01:00 [DBG] Successfully processed template Persons/Create for CRUDExample.Controllers.PersonsController.Create (CRUDExample) resulting in /Persons/Create and 
2023-06-30 18:36:32.020 +01:00 [DBG] Link generation succeeded for endpoints ["CRUDExample.Controllers.PersonsController.Create (CRUDExample)","CRUDExample.Controllers.PersonsController.Create (CRUDExample)"] with result /Persons/Create
2023-06-30 18:36:32.024 +01:00 [DBG] Found the endpoints ["CRUDExample.Controllers.PersonsController.PersonsPDF (CRUDExample)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-06-30 18:36:32.025 +01:00 [DBG] Successfully processed template Persons/PersonsPDF for CRUDExample.Controllers.PersonsController.PersonsPDF (CRUDExample) resulting in /Persons/PersonsPDF and 
2023-06-30 18:36:32.025 +01:00 [DBG] Link generation succeeded for endpoints ["CRUDExample.Controllers.PersonsController.PersonsPDF (CRUDExample)"] with result /Persons/PersonsPDF
2023-06-30 18:36:32.027 +01:00 [DBG] Found the endpoints ["CRUDExample.Controllers.PersonsController.PersonsCSV (CRUDExample)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-06-30 18:36:32.028 +01:00 [DBG] Successfully processed template Persons/PersonsCSV for CRUDExample.Controllers.PersonsController.PersonsCSV (CRUDExample) resulting in /Persons/PersonsCSV and 
2023-06-30 18:36:32.028 +01:00 [DBG] Link generation succeeded for endpoints ["CRUDExample.Controllers.PersonsController.PersonsCSV (CRUDExample)"] with result /Persons/PersonsCSV
2023-06-30 18:36:32.029 +01:00 [DBG] Found the endpoints ["CRUDExample.Controllers.PersonsController.PersonsExcel (CRUDExample)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-06-30 18:36:32.030 +01:00 [DBG] Successfully processed template Persons/PersonsExcel for CRUDExample.Controllers.PersonsController.PersonsExcel (CRUDExample) resulting in /Persons/PersonsExcel and 
2023-06-30 18:36:32.030 +01:00 [DBG] Link generation succeeded for endpoints ["CRUDExample.Controllers.PersonsController.PersonsExcel (CRUDExample)"] with result /Persons/PersonsExcel
2023-06-30 18:36:32.102 +01:00 [DBG] Found the endpoints ["CRUDExample.Controllers.PersonsController.Index (CRUDExample)","CRUDExample.Controllers.PersonsController.Index (CRUDExample)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-06-30 18:36:32.103 +01:00 [DBG] Successfully processed template Persons/Index for CRUDExample.Controllers.PersonsController.Index (CRUDExample) resulting in /Persons/Index and 
2023-06-30 18:36:32.103 +01:00 [DBG] Link generation succeeded for endpoints ["CRUDExample.Controllers.PersonsController.Index (CRUDExample)","CRUDExample.Controllers.PersonsController.Index (CRUDExample)"] with result /Persons/Index
2023-06-30 18:36:32.105 +01:00 [DBG] View lookup cache miss for view '_GridColumnHeader' in controller 'Persons'.
2023-06-30 18:36:32.253 +01:00 [DBG] View lookup cache hit for view '_GridColumnHeader' in controller 'Persons'.
2023-06-30 18:36:32.282 +01:00 [DBG] View lookup cache hit for view '_GridColumnHeader' in controller 'Persons'.
2023-06-30 18:36:32.284 +01:00 [DBG] View lookup cache hit for view '_GridColumnHeader' in controller 'Persons'.
2023-06-30 18:36:32.289 +01:00 [DBG] View lookup cache hit for view '_GridColumnHeader' in controller 'Persons'.
2023-06-30 18:36:32.293 +01:00 [DBG] View lookup cache hit for view '_GridColumnHeader' in controller 'Persons'.
2023-06-30 18:36:32.294 +01:00 [DBG] View lookup cache hit for view '_GridColumnHeader' in controller 'Persons'.
2023-06-30 18:36:32.295 +01:00 [DBG] View lookup cache hit for view '_GridColumnHeader' in controller 'Persons'.
2023-06-30 18:36:32.340 +01:00 [DBG] No endpoints found for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-06-30 18:36:32.341 +01:00 [DBG] No endpoints found for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-06-30 18:36:32.353 +01:00 [DBG] Found the endpoints ["CRUDExample.Controllers.PersonsController.Index (CRUDExample)","CRUDExample.Controllers.PersonsController.Index (CRUDExample)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-06-30 18:36:32.353 +01:00 [DBG] Successfully processed template Persons/Index for CRUDExample.Controllers.PersonsController.Index (CRUDExample) resulting in /Persons/Index and 
2023-06-30 18:36:32.354 +01:00 [DBG] Link generation succeeded for endpoints ["CRUDExample.Controllers.PersonsController.Index (CRUDExample)","CRUDExample.Controllers.PersonsController.Index (CRUDExample)"] with result /Persons/Index
2023-06-30 18:36:32.359 +01:00 [DBG] Found the endpoints ["CRUDExample.Controllers.CountriesController.UploadFromExcel (CRUDExample)","CRUDExample.Controllers.CountriesController.UploadFromExcel (CRUDExample)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-06-30 18:36:32.360 +01:00 [DBG] Successfully processed template Countries/UploadFromExcel for CRUDExample.Controllers.CountriesController.UploadFromExcel (CRUDExample) resulting in /Countries/UploadFromExcel and 
2023-06-30 18:36:32.360 +01:00 [DBG] Link generation succeeded for endpoints ["CRUDExample.Controllers.CountriesController.UploadFromExcel (CRUDExample)","CRUDExample.Controllers.CountriesController.UploadFromExcel (CRUDExample)"] with result /Countries/UploadFromExcel
2023-06-30 18:36:32.406 +01:00 [INF] Executed ViewResult - view Index executed in 876.8044ms.
2023-06-30 18:36:32.407 +01:00 [INF] after logic of PersonsListResultFilter.OnResultExecutionAsync method
2023-06-30 18:36:32.409 +01:00 [INF] Executed action CRUDExample.Controllers.PersonsController.Index (CRUDExample) in 4859.1195ms
2023-06-30 18:36:32.410 +01:00 [INF] Executed endpoint 'CRUDExample.Controllers.PersonsController.Index (CRUDExample)'
2023-06-30 18:36:32.411 +01:00 [INF] Response:
StatusCode: 200
X-Custom-Key-From-Global: [Redacted]
X-Custom-Key-From-Action-Method: [Redacted]
X-Custom-Key-From-Controller: [Redacted]
Content-Type: text/html; charset=utf-8
Last-Modified: 30-06-2023 18:36
2023-06-30 18:36:32.416 +01:00 [INF] HTTP GET /Persons/Index responded 200 in 5291.0150 ms
2023-06-30 18:36:32.441 +01:00 [DBG] 'ApplicationDbContext' disposed.
2023-06-30 18:36:32.445 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost/Persons/Index - - - 200 - text/html;+charset=utf-8 5374.2353ms
2023-06-30 18:36:32.711 +01:00 [DBG] Hosting stopping
2023-06-30 18:36:32.713 +01:00 [DBG] Hosting stopped
2023-06-30 18:36:32.713 +01:00 [DBG] Hosting stopping
2023-06-30 18:36:32.714 +01:00 [DBG] Hosting stopped
2023-06-30 18:56:08.062 +01:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2023-06-30 18:56:08.328 +01:00 [DBG] Hosting starting
2023-06-30 18:56:08.360 +01:00 [INF] User profile is available. Using 'C:\Users\YoussefBaba\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-06-30 18:56:08.410 +01:00 [DBG] Reading data from file 'C:\Users\YoussefBaba\AppData\Local\ASP.NET\DataProtection-Keys\key-086a6081-eb03-4bb1-a34d-5120bae08b88.xml'.
2023-06-30 18:56:08.414 +01:00 [DBG] Reading data from file 'C:\Users\YoussefBaba\AppData\Local\ASP.NET\DataProtection-Keys\key-a87a6934-b999-4d05-b268-66210133ed23.xml'.
2023-06-30 18:56:08.449 +01:00 [DBG] Found key {086a6081-eb03-4bb1-a34d-5120bae08b88}.
2023-06-30 18:56:08.473 +01:00 [DBG] Found key {a87a6934-b999-4d05-b268-66210133ed23}.
2023-06-30 18:56:08.509 +01:00 [DBG] Considering key {a87a6934-b999-4d05-b268-66210133ed23} with expiration date 2023-08-27 09:39:32Z as default key.
2023-06-30 18:56:08.516 +01:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2023-06-30 18:56:08.546 +01:00 [DBG] Decrypting secret element using Windows DPAPI.
2023-06-30 18:56:08.550 +01:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2023-06-30 18:56:08.567 +01:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2023-06-30 18:56:08.575 +01:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2023-06-30 18:56:08.585 +01:00 [DBG] Using key {a87a6934-b999-4d05-b268-66210133ed23} as the default key.
2023-06-30 18:56:08.637 +01:00 [DBG] Key ring with default key {a87a6934-b999-4d05-b268-66210133ed23} was loaded during application startup.
2023-06-30 18:56:08.707 +01:00 [DBG] Loaded hosting startup assembly CRUDExample
2023-06-30 18:56:08.717 +01:00 [DBG] Hosting started
2023-06-30 18:56:09.006 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost/Persons/Index - -
2023-06-30 18:56:09.019 +01:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2023-06-30 18:56:09.037 +01:00 [INF] Request:
Protocol: HTTP/1.1
Method: GET
Scheme: http
PathBase: 
Path: /Persons/Index
Host: localhost
2023-06-30 18:56:09.041 +01:00 [DBG] The request path /Persons/Index does not match a supported file type
2023-06-30 18:56:09.173 +01:00 [DBG] 1 candidate(s) found for the request path '/Persons/Index'
2023-06-30 18:56:09.189 +01:00 [DBG] Endpoint 'CRUDExample.Controllers.PersonsController.Index (CRUDExample)' with route pattern 'Persons/Index' is valid for the request path '/Persons/Index'
2023-06-30 18:56:09.191 +01:00 [DBG] Request matched endpoint 'CRUDExample.Controllers.PersonsController.Index (CRUDExample)'
2023-06-30 18:56:09.193 +01:00 [INF] Executing endpoint 'CRUDExample.Controllers.PersonsController.Index (CRUDExample)'
2023-06-30 18:56:09.354 +01:00 [INF] Route matched with {action = "Index", controller = "Persons"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index(System.String, System.String, System.String, ServiceContracts.Enums.SortOrderOptions) on controller CRUDExample.Controllers.PersonsController (CRUDExample).
2023-06-30 18:56:09.357 +01:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2023-06-30 18:56:09.360 +01:00 [DBG] Execution plan of resource filters (in the following order): ["Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.SaveTempDataFilter"]
2023-06-30 18:56:09.361 +01:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.Filters.ControllerActionFilter (Order: -2147483648)","Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","CRUDExample.Filters.ActionFilters.ResponseHeaderActionFilter (Order: 3)","CRUDExample.Filters.ActionFilters.ResponseHeaderActionFilter (Order: 1)","CRUDExample.Filters.ActionFilters.ResponseHeaderActionFilter (Order: 2)","CRUDExample.Filters.ActionFilters.PersonsListActionFilter (Order: 4)"]
2023-06-30 18:56:09.362 +01:00 [DBG] Execution plan of exception filters (in the following order): ["CRUDExample.Filters.ExceptionFilters.HandleExceptionFilter"]
2023-06-30 18:56:09.363 +01:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.SaveTempDataFilter","CRUDExample.Filters.ResultFilters.PersonsAlwaysRunResultFilter","CRUDExample.Filters.ResultFilters.PersonsListResultFilter"]
2023-06-30 18:56:09.367 +01:00 [DBG] Executing controller factory for controller CRUDExample.Controllers.PersonsController (CRUDExample)
2023-06-30 18:56:09.957 +01:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2023-06-30 18:56:10.088 +01:00 [DBG] Executed controller factory for controller CRUDExample.Controllers.PersonsController (CRUDExample)
2023-06-30 18:56:10.097 +01:00 [DBG] Attempting to bind parameter 'searchBy' of type 'System.String' ...
2023-06-30 18:56:10.101 +01:00 [DBG] Attempting to bind parameter 'searchBy' of type 'System.String' using the name '' in request data ...
2023-06-30 18:56:10.103 +01:00 [DBG] Could not find a value in the request with name '' for binding parameter 'searchBy' of type 'System.String'.
2023-06-30 18:56:10.104 +01:00 [DBG] Done attempting to bind parameter 'searchBy' of type 'System.String'.
2023-06-30 18:56:10.105 +01:00 [DBG] Done attempting to bind parameter 'searchBy' of type 'System.String'.
2023-06-30 18:56:10.105 +01:00 [DBG] Attempting to validate the bound parameter 'searchBy' of type 'System.String' ...
2023-06-30 18:56:10.131 +01:00 [DBG] Done attempting to validate the bound parameter 'searchBy' of type 'System.String'.
2023-06-30 18:56:10.136 +01:00 [DBG] Attempting to bind parameter 'searchString' of type 'System.String' ...
2023-06-30 18:56:10.136 +01:00 [DBG] Attempting to bind parameter 'searchString' of type 'System.String' using the name '' in request data ...
2023-06-30 18:56:10.137 +01:00 [DBG] Could not find a value in the request with name '' for binding parameter 'searchString' of type 'System.String'.
2023-06-30 18:56:10.137 +01:00 [DBG] Done attempting to bind parameter 'searchString' of type 'System.String'.
2023-06-30 18:56:10.138 +01:00 [DBG] Done attempting to bind parameter 'searchString' of type 'System.String'.
2023-06-30 18:56:10.138 +01:00 [DBG] Attempting to validate the bound parameter 'searchString' of type 'System.String' ...
2023-06-30 18:56:10.139 +01:00 [DBG] Done attempting to validate the bound parameter 'searchString' of type 'System.String'.
2023-06-30 18:56:10.139 +01:00 [DBG] Attempting to bind parameter 'sortBy' of type 'System.String' ...
2023-06-30 18:56:10.139 +01:00 [DBG] Attempting to bind parameter 'sortBy' of type 'System.String' using the name '' in request data ...
2023-06-30 18:56:10.140 +01:00 [DBG] Could not find a value in the request with name '' for binding parameter 'sortBy' of type 'System.String'.
2023-06-30 18:56:10.140 +01:00 [DBG] Done attempting to bind parameter 'sortBy' of type 'System.String'.
2023-06-30 18:56:10.140 +01:00 [DBG] Done attempting to bind parameter 'sortBy' of type 'System.String'.
2023-06-30 18:56:10.140 +01:00 [DBG] Attempting to validate the bound parameter 'sortBy' of type 'System.String' ...
2023-06-30 18:56:10.141 +01:00 [DBG] Done attempting to validate the bound parameter 'sortBy' of type 'System.String'.
2023-06-30 18:56:10.142 +01:00 [DBG] Attempting to bind parameter 'sortOrder' of type 'ServiceContracts.Enums.SortOrderOptions' ...
2023-06-30 18:56:10.142 +01:00 [DBG] Attempting to bind parameter 'sortOrder' of type 'ServiceContracts.Enums.SortOrderOptions' using the name '' in request data ...
2023-06-30 18:56:10.142 +01:00 [DBG] Could not find a value in the request with name '' for binding parameter 'sortOrder' of type 'ServiceContracts.Enums.SortOrderOptions'.
2023-06-30 18:56:10.143 +01:00 [DBG] Done attempting to bind parameter 'sortOrder' of type 'ServiceContracts.Enums.SortOrderOptions'.
2023-06-30 18:56:10.143 +01:00 [DBG] Done attempting to bind parameter 'sortOrder' of type 'ServiceContracts.Enums.SortOrderOptions'.
2023-06-30 18:56:10.143 +01:00 [DBG] Attempting to validate the bound parameter 'sortOrder' of type 'ServiceContracts.Enums.SortOrderOptions' ...
2023-06-30 18:56:10.144 +01:00 [DBG] Done attempting to validate the bound parameter 'sortOrder' of type 'ServiceContracts.Enums.SortOrderOptions'.
2023-06-30 18:56:10.152 +01:00 [INF] before logic of ResponseHeaderActionFilter.OnActionExecutionAsync method
2023-06-30 18:56:10.152 +01:00 [INF] before logic of ResponseHeaderActionFilter.OnActionExecutionAsync method
2023-06-30 18:56:10.187 +01:00 [INF] Before logic of PersonsListActionFilter.OnActionExecutionAsync method
2023-06-30 18:56:10.187 +01:00 [DBG] Order: 4
2023-06-30 18:56:10.189 +01:00 [INF] Index action method of PersonsController
2023-06-30 18:56:10.190 +01:00 [DBG] searchBy: null, searchString: null, sortBy: PersonName, sortOrder: "ASC"
2023-06-30 18:56:10.191 +01:00 [INF] GetAllPersons method of PersonsService
2023-06-30 18:56:10.196 +01:00 [INF] GetAllPersons method of PersonsRepository
2023-06-30 18:56:12.901 +01:00 [INF] Entity Framework Core 6.0.7 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=DatabaseForTesting 
2023-06-30 18:56:13.088 +01:00 [DBG] Compiling query expression: 
'DbSet<Person>()
    .Include("Country")'
2023-06-30 18:56:13.566 +01:00 [DBG] Including navigation: 'Person.Country'.
2023-06-30 18:56:14.086 +01:00 [DBG] Generated query execution expression: 
'queryContext => new QueryingEnumerable<Person>(
    queryContext, 
    InMemoryQueryExpression.LeftJoin<ValueBuffer, ValueBuffer, Guid?, ValueBuffer>(
        outer: InMemoryShapedQueryCompilingExpressionVisitor.Table(
            queryContext: queryContext, 
            entityType: EntityType: Person), 
        inner: InMemoryShapedQueryCompilingExpressionVisitor.Table(
            queryContext: queryContext, 
            entityType: EntityType: Country), 
        outerKeySelector: valueBuffer => ExpressionExtensions.ValueBufferTryReadValue<Guid?>(
            valueBuffer: valueBuffer, 
            index: 2, 
            property: Property: Person.CountryID (Guid?) FK Index), 
        innerKeySelector: valueBuffer => (Guid?)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
            valueBuffer: valueBuffer, 
            index: 0, 
            property: Property: Country.CountryID (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
        resultSelector: (outer, inner) => new ValueBuffer(new object[]
        { 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: outer, 
                index: 0, 
                property: Property: Person.PersonID (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: outer, 
                index: 1, 
                property: Property: Person.Address (string) MaxLength(200)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid?>(
                valueBuffer: outer, 
                index: 2, 
                property: Property: Person.CountryID (Guid?) FK Index), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<DateTime?>(
                valueBuffer: outer, 
                index: 3, 
                property: Property: Person.DateOfBirth (DateTime?)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: outer, 
                index: 4, 
                property: Property: Person.Email (string) MaxLength(40)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: outer, 
                index: 5, 
                property: Property: Person.Gender (string) MaxLength(10)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: outer, 
                index: 6, 
                property: Property: Person.PersonName (string) MaxLength(40)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<bool>(
                valueBuffer: outer, 
                index: 7, 
                property: Property: Person.ReceiveNewsLetters (bool) Required), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: outer, 
                index: 8, 
                property: Property: Person.SSN (string)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<bool>(
                valueBuffer: outer, 
                index: 9, 
                property: Property: Person.SSNIsChanged (bool) Required), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: outer, 
                index: 10, 
                property: Property: Person.TIN (string)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid?>(
                valueBuffer: inner, 
                index: 0, 
                property: Property: Country.CountryID (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: inner, 
                index: 1, 
                property: Property: Country.CountryName (string)) 
        }), 
        defaultValue: ValueBuffer)
        .Select(valueBuffer => new ValueBuffer(new object[]
        { 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 0, 
                property: Property: Person.PersonID (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 1, 
                property: Property: Person.Address (string) MaxLength(200)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid?>(
                valueBuffer: valueBuffer, 
                index: 2, 
                property: Property: Person.CountryID (Guid?) FK Index), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<DateTime?>(
                valueBuffer: valueBuffer, 
                index: 3, 
                property: Property: Person.DateOfBirth (DateTime?)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 4, 
                property: Property: Person.Email (string) MaxLength(40)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 5, 
                property: Property: Person.Gender (string) MaxLength(10)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 6, 
                property: Property: Person.PersonName (string) MaxLength(40)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<bool>(
                valueBuffer: valueBuffer, 
                index: 7, 
                property: Property: Person.ReceiveNewsLetters (bool) Required), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 8, 
                property: Property: Person.SSN (string)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<bool>(
                valueBuffer: valueBuffer, 
                index: 9, 
                property: Property: Person.SSNIsChanged (bool) Required), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 10, 
                property: Property: Person.TIN (string)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid?>(
                valueBuffer: valueBuffer, 
                index: 11, 
                property: Property: Country.CountryID (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 12, 
                property: Property: Country.CountryName (string)) 
        }))
        .Select(valueBuffer => new ValueBuffer(new object[]
        { 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 0, 
                property: Property: Person.PersonID (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 1, 
                property: Property: Person.Address (string) MaxLength(200)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid?>(
                valueBuffer: valueBuffer, 
                index: 2, 
                property: Property: Person.CountryID (Guid?) FK Index), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<DateTime?>(
                valueBuffer: valueBuffer, 
                index: 3, 
                property: Property: Person.DateOfBirth (DateTime?)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 4, 
                property: Property: Person.Email (string) MaxLength(40)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 5, 
                property: Property: Person.Gender (string) MaxLength(10)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 6, 
                property: Property: Person.PersonName (string) MaxLength(40)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<bool>(
                valueBuffer: valueBuffer, 
                index: 7, 
                property: Property: Person.ReceiveNewsLetters (bool) Required), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 8, 
                property: Property: Person.SSN (string)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<bool>(
                valueBuffer: valueBuffer, 
                index: 9, 
                property: Property: Person.SSNIsChanged (bool) Required), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 10, 
                property: Property: Person.TIN (string)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid?>(
                valueBuffer: valueBuffer, 
                index: 11, 
                property: Property: Country.CountryID (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 12, 
                property: Property: Country.CountryName (string)) 
        })), 
    Func<QueryContext, ValueBuffer, Person>, 
    Entities.ApplicationDbContext, 
    False, 
    True
)'
2023-06-30 18:56:14.138 +01:00 [INF] GetFilteredPersons method of PersonsService
2023-06-30 18:56:14.138 +01:00 [INF] GetAllPersons method of PersonsRepository
2023-06-30 18:56:14.141 +01:00 [INF] GetSortedPersons method of PersonsService
2023-06-30 18:56:14.142 +01:00 [INF] After logic of PersonsListActionFilter.OnActionExecutionAsync method
2023-06-30 18:56:14.142 +01:00 [DBG] Order: 4
2023-06-30 18:56:14.143 +01:00 [INF] after logic of ResponseHeaderActionFilter.OnActionExecutionAsync method
2023-06-30 18:56:14.144 +01:00 [INF] after logic of ResponseHeaderActionFilter.OnActionExecutionAsync method
2023-06-30 18:56:14.150 +01:00 [INF] before logic of PersonsListResultFilter.OnResultExecutionAsync method
2023-06-30 18:56:14.156 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Countries/UploadFromExcel.cshtml'.
2023-06-30 18:56:14.156 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Persons/Create.cshtml'.
2023-06-30 18:56:14.157 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Persons/Delete.cshtml'.
2023-06-30 18:56:14.157 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Persons/Edit.cshtml'.
2023-06-30 18:56:14.157 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Persons/Index.cshtml'.
2023-06-30 18:56:14.157 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Persons/PersonsPDF.cshtml'.
2023-06-30 18:56:14.157 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Shared/_Breadcrumb.cshtml'.
2023-06-30 18:56:14.157 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Shared/_GridColumnHeader.cshtml'.
2023-06-30 18:56:14.157 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/Shared/_Layout.cshtml'.
2023-06-30 18:56:14.158 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/_ViewImports.cshtml'.
2023-06-30 18:56:14.158 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/Views/_ViewStart.cshtml'.
2023-06-30 18:56:14.169 +01:00 [DBG] View lookup cache miss for view 'Index' in controller 'Persons'.
2023-06-30 18:56:14.178 +01:00 [INF] Executing ViewResult, running view Index.
2023-06-30 18:56:14.195 +01:00 [DBG] The view path '/Views/Persons/Index.cshtml' was found in 10.984ms.
2023-06-30 18:56:14.340 +01:00 [DBG] Found the endpoints ["CRUDExample.Controllers.PersonsController.Index (CRUDExample)","CRUDExample.Controllers.PersonsController.Index (CRUDExample)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-06-30 18:56:14.358 +01:00 [DBG] Successfully processed template Persons/Index for CRUDExample.Controllers.PersonsController.Index (CRUDExample) resulting in /Persons/Index and 
2023-06-30 18:56:14.359 +01:00 [DBG] Link generation succeeded for endpoints ["CRUDExample.Controllers.PersonsController.Index (CRUDExample)","CRUDExample.Controllers.PersonsController.Index (CRUDExample)"] with result /Persons/Index
2023-06-30 18:56:14.389 +01:00 [DBG] View lookup cache miss for view '_Breadcrumb' in controller 'Persons'.
2023-06-30 18:56:14.455 +01:00 [DBG] Found the endpoints ["CRUDExample.Controllers.PersonsController.Create (CRUDExample)","CRUDExample.Controllers.PersonsController.Create (CRUDExample)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-06-30 18:56:14.456 +01:00 [DBG] Successfully processed template Persons/Create for CRUDExample.Controllers.PersonsController.Create (CRUDExample) resulting in /Persons/Create and 
2023-06-30 18:56:14.456 +01:00 [DBG] Link generation succeeded for endpoints ["CRUDExample.Controllers.PersonsController.Create (CRUDExample)","CRUDExample.Controllers.PersonsController.Create (CRUDExample)"] with result /Persons/Create
2023-06-30 18:56:14.459 +01:00 [DBG] Found the endpoints ["CRUDExample.Controllers.PersonsController.PersonsPDF (CRUDExample)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-06-30 18:56:14.459 +01:00 [DBG] Successfully processed template Persons/PersonsPDF for CRUDExample.Controllers.PersonsController.PersonsPDF (CRUDExample) resulting in /Persons/PersonsPDF and 
2023-06-30 18:56:14.460 +01:00 [DBG] Link generation succeeded for endpoints ["CRUDExample.Controllers.PersonsController.PersonsPDF (CRUDExample)"] with result /Persons/PersonsPDF
2023-06-30 18:56:14.462 +01:00 [DBG] Found the endpoints ["CRUDExample.Controllers.PersonsController.PersonsCSV (CRUDExample)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-06-30 18:56:14.462 +01:00 [DBG] Successfully processed template Persons/PersonsCSV for CRUDExample.Controllers.PersonsController.PersonsCSV (CRUDExample) resulting in /Persons/PersonsCSV and 
2023-06-30 18:56:14.462 +01:00 [DBG] Link generation succeeded for endpoints ["CRUDExample.Controllers.PersonsController.PersonsCSV (CRUDExample)"] with result /Persons/PersonsCSV
2023-06-30 18:56:14.465 +01:00 [DBG] Found the endpoints ["CRUDExample.Controllers.PersonsController.PersonsExcel (CRUDExample)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-06-30 18:56:14.466 +01:00 [DBG] Successfully processed template Persons/PersonsExcel for CRUDExample.Controllers.PersonsController.PersonsExcel (CRUDExample) resulting in /Persons/PersonsExcel and 
2023-06-30 18:56:14.466 +01:00 [DBG] Link generation succeeded for endpoints ["CRUDExample.Controllers.PersonsController.PersonsExcel (CRUDExample)"] with result /Persons/PersonsExcel
2023-06-30 18:56:14.515 +01:00 [DBG] Found the endpoints ["CRUDExample.Controllers.PersonsController.Index (CRUDExample)","CRUDExample.Controllers.PersonsController.Index (CRUDExample)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-06-30 18:56:14.515 +01:00 [DBG] Successfully processed template Persons/Index for CRUDExample.Controllers.PersonsController.Index (CRUDExample) resulting in /Persons/Index and 
2023-06-30 18:56:14.516 +01:00 [DBG] Link generation succeeded for endpoints ["CRUDExample.Controllers.PersonsController.Index (CRUDExample)","CRUDExample.Controllers.PersonsController.Index (CRUDExample)"] with result /Persons/Index
2023-06-30 18:56:14.518 +01:00 [DBG] View lookup cache miss for view '_GridColumnHeader' in controller 'Persons'.
2023-06-30 18:56:14.647 +01:00 [DBG] View lookup cache hit for view '_GridColumnHeader' in controller 'Persons'.
2023-06-30 18:56:14.672 +01:00 [DBG] View lookup cache hit for view '_GridColumnHeader' in controller 'Persons'.
2023-06-30 18:56:14.674 +01:00 [DBG] View lookup cache hit for view '_GridColumnHeader' in controller 'Persons'.
2023-06-30 18:56:14.681 +01:00 [DBG] View lookup cache hit for view '_GridColumnHeader' in controller 'Persons'.
2023-06-30 18:56:14.690 +01:00 [DBG] View lookup cache hit for view '_GridColumnHeader' in controller 'Persons'.
2023-06-30 18:56:14.692 +01:00 [DBG] View lookup cache hit for view '_GridColumnHeader' in controller 'Persons'.
2023-06-30 18:56:14.692 +01:00 [DBG] View lookup cache hit for view '_GridColumnHeader' in controller 'Persons'.
2023-06-30 18:56:14.788 +01:00 [DBG] No endpoints found for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-06-30 18:56:14.789 +01:00 [DBG] No endpoints found for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-06-30 18:56:14.801 +01:00 [DBG] Found the endpoints ["CRUDExample.Controllers.PersonsController.Index (CRUDExample)","CRUDExample.Controllers.PersonsController.Index (CRUDExample)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-06-30 18:56:14.801 +01:00 [DBG] Successfully processed template Persons/Index for CRUDExample.Controllers.PersonsController.Index (CRUDExample) resulting in /Persons/Index and 
2023-06-30 18:56:14.802 +01:00 [DBG] Link generation succeeded for endpoints ["CRUDExample.Controllers.PersonsController.Index (CRUDExample)","CRUDExample.Controllers.PersonsController.Index (CRUDExample)"] with result /Persons/Index
2023-06-30 18:56:14.807 +01:00 [DBG] Found the endpoints ["CRUDExample.Controllers.CountriesController.UploadFromExcel (CRUDExample)","CRUDExample.Controllers.CountriesController.UploadFromExcel (CRUDExample)"] for address Microsoft.AspNetCore.Routing.RouteValuesAddress
2023-06-30 18:56:14.808 +01:00 [DBG] Successfully processed template Countries/UploadFromExcel for CRUDExample.Controllers.CountriesController.UploadFromExcel (CRUDExample) resulting in /Countries/UploadFromExcel and 
2023-06-30 18:56:14.808 +01:00 [DBG] Link generation succeeded for endpoints ["CRUDExample.Controllers.CountriesController.UploadFromExcel (CRUDExample)","CRUDExample.Controllers.CountriesController.UploadFromExcel (CRUDExample)"] with result /Countries/UploadFromExcel
2023-06-30 18:56:14.861 +01:00 [INF] Executed ViewResult - view Index executed in 693.1435ms.
2023-06-30 18:56:14.862 +01:00 [INF] after logic of PersonsListResultFilter.OnResultExecutionAsync method
2023-06-30 18:56:14.869 +01:00 [INF] Executed action CRUDExample.Controllers.PersonsController.Index (CRUDExample) in 5505.6804ms
2023-06-30 18:56:14.870 +01:00 [INF] Executed endpoint 'CRUDExample.Controllers.PersonsController.Index (CRUDExample)'
2023-06-30 18:56:14.871 +01:00 [INF] Response:
StatusCode: 200
X-Custom-Key-From-Global: [Redacted]
X-Custom-Key-From-Action-Method: [Redacted]
X-Custom-Key-From-Controller: [Redacted]
Content-Type: text/html; charset=utf-8
Last-Modified: 30-06-2023 18:56
2023-06-30 18:56:14.906 +01:00 [INF] HTTP GET /Persons/Index responded 200 in 5849.3181 ms
2023-06-30 18:56:14.933 +01:00 [DBG] 'ApplicationDbContext' disposed.
2023-06-30 18:56:14.938 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost/Persons/Index - - - 200 - text/html;+charset=utf-8 5982.4876ms
2023-06-30 18:56:15.141 +01:00 [DBG] Hosting stopping
2023-06-30 18:56:15.144 +01:00 [DBG] Hosting stopping
2023-06-30 18:56:15.145 +01:00 [DBG] Hosting stopped
2023-06-30 18:56:15.145 +01:00 [DBG] Hosting stopped
